// generated by template, do not modify manually

using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Intrinsics;

namespace MidExpr;

public static unsafe class MidInterpreter2
{
    public static void Exec(ushort[] codes, byte* stack)
    {
        Vector128<byte> r0 = default;
        Vector128<byte> r1 = default;
        Vector128<byte> r2 = default;
        Vector128<byte> r3 = default;
        Vector128<byte> r4 = default;
        Vector128<byte> r5 = default;
        Vector128<byte> r6 = default;
        Vector128<byte> r7 = default;
        fixed (ushort* p_code = codes)
        {
            var code = p_code;
            Next:
            switch ((OpCode2)(*code))
            {
                case OpCode2.Nop: code++; goto Next;

                case OpCode2.Ret: throw new NotImplementedException("todo Ret");

                case OpCode2.Call: throw new NotImplementedException("todo Call");
                case OpCode2.CallInd: throw new NotImplementedException("todo CallInd");

                case OpCode2.LdNull_R0: r0 = default; code++; goto Next;
                case OpCode2.LdNull_R1: r1 = default; code++; goto Next;
                case OpCode2.LdNull_R2: r2 = default; code++; goto Next;
                case OpCode2.LdNull_R3: r3 = default; code++; goto Next;
                case OpCode2.LdNull_R4: r4 = default; code++; goto Next;
                case OpCode2.LdNull_R5: r5 = default; code++; goto Next;
                case OpCode2.LdNull_R6: r6 = default; code++; goto Next;
                case OpCode2.LdNull_R7: r7 = default; code++; goto Next;

                case OpCode2.Ldc_R0_I4_M1:
                    r0 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_I4_0:
                    r0 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_I4_1:
                    r0 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_I4_2:
                    r0 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_I4_3:
                    r0 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_I4_5:
                    r0 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R0_F4_1:
                    r0 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_F4_M1:
                    r0 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_F4_2:
                    r0 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_F4_05: // 0.5
                    r0 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R0_F4_M05: // -0.5
                    r0 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R0_X4: // <op> <4 byte value>
                    r0 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R0_X8: // <op> <8 byte value>
                    r0 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R1_I4_M1:
                    r1 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_I4_0:
                    r1 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_I4_1:
                    r1 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_I4_2:
                    r1 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_I4_3:
                    r1 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_I4_5:
                    r1 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R1_F4_1:
                    r1 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_F4_M1:
                    r1 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_F4_2:
                    r1 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_F4_05: // 0.5
                    r1 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R1_F4_M05: // -0.5
                    r1 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R1_X4: // <op> <4 byte value>
                    r1 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R1_X8: // <op> <8 byte value>
                    r1 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R2_I4_M1:
                    r2 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_I4_0:
                    r2 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_I4_1:
                    r2 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_I4_2:
                    r2 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_I4_3:
                    r2 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_I4_5:
                    r2 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R2_F4_1:
                    r2 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_F4_M1:
                    r2 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_F4_2:
                    r2 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_F4_05: // 0.5
                    r2 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R2_F4_M05: // -0.5
                    r2 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R2_X4: // <op> <4 byte value>
                    r2 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R2_X8: // <op> <8 byte value>
                    r2 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R3_I4_M1:
                    r3 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_I4_0:
                    r3 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_I4_1:
                    r3 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_I4_2:
                    r3 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_I4_3:
                    r3 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_I4_5:
                    r3 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R3_F4_1:
                    r3 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_F4_M1:
                    r3 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_F4_2:
                    r3 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_F4_05: // 0.5
                    r3 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R3_F4_M05: // -0.5
                    r3 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R3_X4: // <op> <4 byte value>
                    r3 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R3_X8: // <op> <8 byte value>
                    r3 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R4_I4_M1:
                    r4 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_I4_0:
                    r4 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_I4_1:
                    r4 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_I4_2:
                    r4 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_I4_3:
                    r4 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_I4_5:
                    r4 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R4_F4_1:
                    r4 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_F4_M1:
                    r4 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_F4_2:
                    r4 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_F4_05: // 0.5
                    r4 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R4_F4_M05: // -0.5
                    r4 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R4_X4: // <op> <4 byte value>
                    r4 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R4_X8: // <op> <8 byte value>
                    r4 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R5_I4_M1:
                    r5 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_I4_0:
                    r5 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_I4_1:
                    r5 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_I4_2:
                    r5 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_I4_3:
                    r5 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_I4_5:
                    r5 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R5_F4_1:
                    r5 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_F4_M1:
                    r5 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_F4_2:
                    r5 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_F4_05: // 0.5
                    r5 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R5_F4_M05: // -0.5
                    r5 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R5_X4: // <op> <4 byte value>
                    r5 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R5_X8: // <op> <8 byte value>
                    r5 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R6_I4_M1:
                    r6 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_I4_0:
                    r6 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_I4_1:
                    r6 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_I4_2:
                    r6 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_I4_3:
                    r6 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_I4_5:
                    r6 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R6_F4_1:
                    r6 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_F4_M1:
                    r6 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_F4_2:
                    r6 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_F4_05: // 0.5
                    r6 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R6_F4_M05: // -0.5
                    r6 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R6_X4: // <op> <4 byte value>
                    r6 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R6_X8: // <op> <8 byte value>
                    r6 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.Ldc_R7_I4_M1:
                    r7 = Vector128.CreateScalar(-1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_I4_0:
                    r7 = Vector128.CreateScalar(0).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_I4_1:
                    r7 = Vector128.CreateScalar(1).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_I4_2:
                    r7 = Vector128.CreateScalar(2).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_I4_3:
                    r7 = Vector128.CreateScalar(3).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_I4_5:
                    r7 = Vector128.CreateScalar(5).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R7_F4_1:
                    r7 = Vector128.CreateScalar(1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_F4_M1:
                    r7 = Vector128.CreateScalar(-1f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_F4_2:
                    r7 = Vector128.CreateScalar(2f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_F4_05: // 0.5
                    r7 = Vector128.CreateScalar(0.5f).AsByte(); code++; goto Next;
                case OpCode2.Ldc_R7_F4_M05: // -0.5
                    r7 = Vector128.CreateScalar(-0.5f).AsByte(); code++; goto Next;

                case OpCode2.Ldc_R7_X4: // <op> <4 byte value>
                    r7 = Vector128.CreateScalar(*(int*)(code + 1)).AsByte(); code += 3; goto Next;
                case OpCode2.Ldc_R7_X8: // <op> <8 byte value>
                    r7 = Vector128.CreateScalar(*(long*)(code + 1)).AsByte(); code += 5; goto Next;

                case OpCode2.LdLoc_R0_X1: // <op> <u2 offset (4 byte step)>
                    r0 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R0_X2: // <op> <u2 offset (4 byte step)>
                    r0 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R0_X4: // <op> <u2 offset (4 byte step)>
                    r0 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R0_X8: // <op> <u2 offset (4 byte step)>
                    r0 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R1_X1: // <op> <u2 offset (4 byte step)>
                    r1 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R1_X2: // <op> <u2 offset (4 byte step)>
                    r1 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R1_X4: // <op> <u2 offset (4 byte step)>
                    r1 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R1_X8: // <op> <u2 offset (4 byte step)>
                    r1 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R2_X1: // <op> <u2 offset (4 byte step)>
                    r2 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R2_X2: // <op> <u2 offset (4 byte step)>
                    r2 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R2_X4: // <op> <u2 offset (4 byte step)>
                    r2 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R2_X8: // <op> <u2 offset (4 byte step)>
                    r2 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R3_X1: // <op> <u2 offset (4 byte step)>
                    r3 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R3_X2: // <op> <u2 offset (4 byte step)>
                    r3 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R3_X4: // <op> <u2 offset (4 byte step)>
                    r3 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R3_X8: // <op> <u2 offset (4 byte step)>
                    r3 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R4_X1: // <op> <u2 offset (4 byte step)>
                    r4 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R4_X2: // <op> <u2 offset (4 byte step)>
                    r4 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R4_X4: // <op> <u2 offset (4 byte step)>
                    r4 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R4_X8: // <op> <u2 offset (4 byte step)>
                    r4 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R5_X1: // <op> <u2 offset (4 byte step)>
                    r5 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R5_X2: // <op> <u2 offset (4 byte step)>
                    r5 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R5_X4: // <op> <u2 offset (4 byte step)>
                    r5 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R5_X8: // <op> <u2 offset (4 byte step)>
                    r5 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R6_X1: // <op> <u2 offset (4 byte step)>
                    r6 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R6_X2: // <op> <u2 offset (4 byte step)>
                    r6 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R6_X4: // <op> <u2 offset (4 byte step)>
                    r6 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R6_X8: // <op> <u2 offset (4 byte step)>
                    r6 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R7_X1: // <op> <u2 offset (4 byte step)>
                    r7 = Vector128.CreateScalar(*(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R7_X2: // <op> <u2 offset (4 byte step)>
                    r7 = Vector128.CreateScalar(*(ushort*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R7_X4: // <op> <u2 offset (4 byte step)>
                    r7 = Vector128.CreateScalar(*(uint*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLoc_R7_X8: // <op> <u2 offset (4 byte step)>
                    r7 = Vector128.CreateScalar(*(ulong*)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;

                case OpCode2.StLoc_R0_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r0[0]; code += 2; goto Next;
                case OpCode2.StLoc_R0_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r0.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R0_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r0.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R0_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r0.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R1_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r1[0]; code += 2; goto Next;
                case OpCode2.StLoc_R1_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r1.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R1_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r1.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R1_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r1.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R2_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r2[0]; code += 2; goto Next;
                case OpCode2.StLoc_R2_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r2.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R2_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r2.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R2_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r2.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R3_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r3[0]; code += 2; goto Next;
                case OpCode2.StLoc_R3_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r3.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R3_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r3.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R3_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r3.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R4_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r4[0]; code += 2; goto Next;
                case OpCode2.StLoc_R4_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r4.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R4_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r4.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R4_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r4.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R5_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r5[0]; code += 2; goto Next;
                case OpCode2.StLoc_R5_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r5.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R5_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r5.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R5_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r5.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R6_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r6[0]; code += 2; goto Next;
                case OpCode2.StLoc_R6_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r6.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R6_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r6.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R6_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r6.AsUInt64()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R7_X1: // <op> <u2 offset (4 byte step)>
                    *(stack + 4 * *(code + 1)) = r7[0]; code += 2; goto Next;
                case OpCode2.StLoc_R7_X2: // <op> <u2 offset (4 byte step)>
                    *(ushort*)(stack + 4 * *(code + 1)) = r7.AsUInt16()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R7_X4: // <op> <u2 offset (4 byte step)>
                    *(uint*)(stack + 4 * *(code + 1)) = r7.AsUInt32()[0]; code += 2; goto Next;
                case OpCode2.StLoc_R7_X8: // <op> <u2 offset (4 byte step)>
                    *(ulong*)(stack + 4 * *(code + 1)) = r7.AsUInt64()[0]; code += 2; goto Next;

                case OpCode2.LdLocA_R0: // <op> <u2 offset (4 byte step)>
                    r0 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R1: // <op> <u2 offset (4 byte step)>
                    r1 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R2: // <op> <u2 offset (4 byte step)>
                    r2 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R3: // <op> <u2 offset (4 byte step)>
                    r3 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R4: // <op> <u2 offset (4 byte step)>
                    r4 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R5: // <op> <u2 offset (4 byte step)>
                    r5 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R6: // <op> <u2 offset (4 byte step)>
                    r6 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;
                case OpCode2.LdLocA_R7: // <op> <u2 offset (4 byte step)>
                    r7 = Vector128.CreateScalar((nuint)(stack + 4 * *(code + 1))).AsByte(); code += 2; goto Next;

                case OpCode2.LdInd_R0_R0_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R0_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R0_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R0_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R1_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R1_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R1_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R1_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R2_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R2_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R2_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R2_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R3_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R3_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R3_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R3_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R4_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R4_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R4_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R4_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R5_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R5_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R5_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R5_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R6_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R6_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R6_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R6_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R7_X1:
                    r0 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R7_X2:
                    r0 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R7_X4:
                    r0 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R0_R7_X8:
                    r0 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R0_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R0_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R0_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R0_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R1_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R1_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R1_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R1_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R2_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R2_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R2_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R2_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R3_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R3_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R3_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R3_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R4_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R4_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R4_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R4_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R5_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R5_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R5_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R5_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R6_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R6_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R6_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R6_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R7_X1:
                    r1 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R7_X2:
                    r1 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R7_X4:
                    r1 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R1_R7_X8:
                    r1 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R0_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R0_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R0_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R0_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R1_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R1_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R1_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R1_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R2_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R2_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R2_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R2_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R3_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R3_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R3_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R3_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R4_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R4_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R4_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R4_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R5_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R5_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R5_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R5_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R6_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R6_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R6_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R6_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R7_X1:
                    r2 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R7_X2:
                    r2 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R7_X4:
                    r2 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R2_R7_X8:
                    r2 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R0_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R0_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R0_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R0_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R1_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R1_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R1_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R1_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R2_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R2_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R2_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R2_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R3_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R3_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R3_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R3_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R4_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R4_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R4_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R4_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R5_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R5_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R5_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R5_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R6_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R6_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R6_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R6_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R7_X1:
                    r3 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R7_X2:
                    r3 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R7_X4:
                    r3 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R3_R7_X8:
                    r3 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R0_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R0_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R0_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R0_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R1_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R1_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R1_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R1_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R2_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R2_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R2_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R2_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R3_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R3_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R3_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R3_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R4_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R4_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R4_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R4_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R5_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R5_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R5_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R5_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R6_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R6_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R6_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R6_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R7_X1:
                    r4 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R7_X2:
                    r4 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R7_X4:
                    r4 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R4_R7_X8:
                    r4 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R0_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R0_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R0_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R0_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R1_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R1_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R1_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R1_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R2_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R2_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R2_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R2_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R3_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R3_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R3_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R3_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R4_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R4_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R4_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R4_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R5_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R5_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R5_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R5_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R6_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R6_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R6_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R6_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R7_X1:
                    r5 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R7_X2:
                    r5 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R7_X4:
                    r5 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R5_R7_X8:
                    r5 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R0_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R0_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R0_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R0_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R1_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R1_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R1_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R1_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R2_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R2_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R2_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R2_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R3_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R3_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R3_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R3_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R4_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R4_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R4_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R4_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R5_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R5_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R5_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R5_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R6_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R6_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R6_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R6_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R7_X1:
                    r6 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R7_X2:
                    r6 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R7_X4:
                    r6 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R6_R7_X8:
                    r6 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R0_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R0_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R0_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R0_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r0.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R1_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R1_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R1_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R1_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r1.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R2_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R2_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R2_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R2_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r2.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R3_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R3_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R3_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R3_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r3.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R4_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R4_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R4_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R4_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r4.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R5_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R5_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R5_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R5_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r5.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R6_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R6_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R6_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R6_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r6.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R7_X1:
                    r7 = Vector128.CreateScalar(*(byte*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R7_X2:
                    r7 = Vector128.CreateScalar(*(ushort*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R7_X4:
                    r7 = Vector128.CreateScalar(*(uint*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;
                case OpCode2.LdInd_R7_R7_X8:
                    r7 = Vector128.CreateScalar(*(ulong*)r7.AsNUInt()[0]).AsByte(); code++; goto Next;

                case OpCode2.StInd_R0_R0_X1:
                    *(byte*)r0.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R0_R0_X2:
                    *(ushort*)r0.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R0_X4:
                    *(uint*)r0.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R0_X8:
                    *(ulong*)r0.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R1_X1:
                    *(byte*)r0.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R0_R1_X2:
                    *(ushort*)r0.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R1_X4:
                    *(uint*)r0.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R1_X8:
                    *(ulong*)r0.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R2_X1:
                    *(byte*)r0.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R0_R2_X2:
                    *(ushort*)r0.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R2_X4:
                    *(uint*)r0.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R2_X8:
                    *(ulong*)r0.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R3_X1:
                    *(byte*)r0.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R0_R3_X2:
                    *(ushort*)r0.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R3_X4:
                    *(uint*)r0.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R3_X8:
                    *(ulong*)r0.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R4_X1:
                    *(byte*)r0.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R0_R4_X2:
                    *(ushort*)r0.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R4_X4:
                    *(uint*)r0.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R4_X8:
                    *(ulong*)r0.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R5_X1:
                    *(byte*)r0.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R0_R5_X2:
                    *(ushort*)r0.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R5_X4:
                    *(uint*)r0.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R5_X8:
                    *(ulong*)r0.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R6_X1:
                    *(byte*)r0.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R0_R6_X2:
                    *(ushort*)r0.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R6_X4:
                    *(uint*)r0.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R6_X8:
                    *(ulong*)r0.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R7_X1:
                    *(byte*)r0.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R0_R7_X2:
                    *(ushort*)r0.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R7_X4:
                    *(uint*)r0.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R0_R7_X8:
                    *(ulong*)r0.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R0_X1:
                    *(byte*)r1.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R1_R0_X2:
                    *(ushort*)r1.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R0_X4:
                    *(uint*)r1.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R0_X8:
                    *(ulong*)r1.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R1_X1:
                    *(byte*)r1.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R1_R1_X2:
                    *(ushort*)r1.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R1_X4:
                    *(uint*)r1.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R1_X8:
                    *(ulong*)r1.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R2_X1:
                    *(byte*)r1.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R1_R2_X2:
                    *(ushort*)r1.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R2_X4:
                    *(uint*)r1.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R2_X8:
                    *(ulong*)r1.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R3_X1:
                    *(byte*)r1.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R1_R3_X2:
                    *(ushort*)r1.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R3_X4:
                    *(uint*)r1.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R3_X8:
                    *(ulong*)r1.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R4_X1:
                    *(byte*)r1.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R1_R4_X2:
                    *(ushort*)r1.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R4_X4:
                    *(uint*)r1.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R4_X8:
                    *(ulong*)r1.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R5_X1:
                    *(byte*)r1.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R1_R5_X2:
                    *(ushort*)r1.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R5_X4:
                    *(uint*)r1.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R5_X8:
                    *(ulong*)r1.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R6_X1:
                    *(byte*)r1.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R1_R6_X2:
                    *(ushort*)r1.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R6_X4:
                    *(uint*)r1.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R6_X8:
                    *(ulong*)r1.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R7_X1:
                    *(byte*)r1.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R1_R7_X2:
                    *(ushort*)r1.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R7_X4:
                    *(uint*)r1.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R1_R7_X8:
                    *(ulong*)r1.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R0_X1:
                    *(byte*)r2.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R2_R0_X2:
                    *(ushort*)r2.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R0_X4:
                    *(uint*)r2.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R0_X8:
                    *(ulong*)r2.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R1_X1:
                    *(byte*)r2.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R2_R1_X2:
                    *(ushort*)r2.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R1_X4:
                    *(uint*)r2.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R1_X8:
                    *(ulong*)r2.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R2_X1:
                    *(byte*)r2.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R2_R2_X2:
                    *(ushort*)r2.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R2_X4:
                    *(uint*)r2.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R2_X8:
                    *(ulong*)r2.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R3_X1:
                    *(byte*)r2.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R2_R3_X2:
                    *(ushort*)r2.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R3_X4:
                    *(uint*)r2.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R3_X8:
                    *(ulong*)r2.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R4_X1:
                    *(byte*)r2.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R2_R4_X2:
                    *(ushort*)r2.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R4_X4:
                    *(uint*)r2.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R4_X8:
                    *(ulong*)r2.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R5_X1:
                    *(byte*)r2.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R2_R5_X2:
                    *(ushort*)r2.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R5_X4:
                    *(uint*)r2.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R5_X8:
                    *(ulong*)r2.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R6_X1:
                    *(byte*)r2.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R2_R6_X2:
                    *(ushort*)r2.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R6_X4:
                    *(uint*)r2.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R6_X8:
                    *(ulong*)r2.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R7_X1:
                    *(byte*)r2.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R2_R7_X2:
                    *(ushort*)r2.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R7_X4:
                    *(uint*)r2.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R2_R7_X8:
                    *(ulong*)r2.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R0_X1:
                    *(byte*)r3.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R3_R0_X2:
                    *(ushort*)r3.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R0_X4:
                    *(uint*)r3.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R0_X8:
                    *(ulong*)r3.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R1_X1:
                    *(byte*)r3.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R3_R1_X2:
                    *(ushort*)r3.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R1_X4:
                    *(uint*)r3.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R1_X8:
                    *(ulong*)r3.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R2_X1:
                    *(byte*)r3.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R3_R2_X2:
                    *(ushort*)r3.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R2_X4:
                    *(uint*)r3.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R2_X8:
                    *(ulong*)r3.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R3_X1:
                    *(byte*)r3.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R3_R3_X2:
                    *(ushort*)r3.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R3_X4:
                    *(uint*)r3.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R3_X8:
                    *(ulong*)r3.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R4_X1:
                    *(byte*)r3.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R3_R4_X2:
                    *(ushort*)r3.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R4_X4:
                    *(uint*)r3.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R4_X8:
                    *(ulong*)r3.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R5_X1:
                    *(byte*)r3.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R3_R5_X2:
                    *(ushort*)r3.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R5_X4:
                    *(uint*)r3.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R5_X8:
                    *(ulong*)r3.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R6_X1:
                    *(byte*)r3.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R3_R6_X2:
                    *(ushort*)r3.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R6_X4:
                    *(uint*)r3.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R6_X8:
                    *(ulong*)r3.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R7_X1:
                    *(byte*)r3.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R3_R7_X2:
                    *(ushort*)r3.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R7_X4:
                    *(uint*)r3.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R3_R7_X8:
                    *(ulong*)r3.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R0_X1:
                    *(byte*)r4.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R4_R0_X2:
                    *(ushort*)r4.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R0_X4:
                    *(uint*)r4.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R0_X8:
                    *(ulong*)r4.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R1_X1:
                    *(byte*)r4.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R4_R1_X2:
                    *(ushort*)r4.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R1_X4:
                    *(uint*)r4.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R1_X8:
                    *(ulong*)r4.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R2_X1:
                    *(byte*)r4.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R4_R2_X2:
                    *(ushort*)r4.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R2_X4:
                    *(uint*)r4.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R2_X8:
                    *(ulong*)r4.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R3_X1:
                    *(byte*)r4.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R4_R3_X2:
                    *(ushort*)r4.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R3_X4:
                    *(uint*)r4.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R3_X8:
                    *(ulong*)r4.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R4_X1:
                    *(byte*)r4.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R4_R4_X2:
                    *(ushort*)r4.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R4_X4:
                    *(uint*)r4.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R4_X8:
                    *(ulong*)r4.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R5_X1:
                    *(byte*)r4.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R4_R5_X2:
                    *(ushort*)r4.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R5_X4:
                    *(uint*)r4.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R5_X8:
                    *(ulong*)r4.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R6_X1:
                    *(byte*)r4.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R4_R6_X2:
                    *(ushort*)r4.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R6_X4:
                    *(uint*)r4.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R6_X8:
                    *(ulong*)r4.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R7_X1:
                    *(byte*)r4.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R4_R7_X2:
                    *(ushort*)r4.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R7_X4:
                    *(uint*)r4.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R4_R7_X8:
                    *(ulong*)r4.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R0_X1:
                    *(byte*)r5.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R5_R0_X2:
                    *(ushort*)r5.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R0_X4:
                    *(uint*)r5.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R0_X8:
                    *(ulong*)r5.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R1_X1:
                    *(byte*)r5.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R5_R1_X2:
                    *(ushort*)r5.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R1_X4:
                    *(uint*)r5.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R1_X8:
                    *(ulong*)r5.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R2_X1:
                    *(byte*)r5.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R5_R2_X2:
                    *(ushort*)r5.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R2_X4:
                    *(uint*)r5.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R2_X8:
                    *(ulong*)r5.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R3_X1:
                    *(byte*)r5.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R5_R3_X2:
                    *(ushort*)r5.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R3_X4:
                    *(uint*)r5.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R3_X8:
                    *(ulong*)r5.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R4_X1:
                    *(byte*)r5.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R5_R4_X2:
                    *(ushort*)r5.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R4_X4:
                    *(uint*)r5.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R4_X8:
                    *(ulong*)r5.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R5_X1:
                    *(byte*)r5.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R5_R5_X2:
                    *(ushort*)r5.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R5_X4:
                    *(uint*)r5.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R5_X8:
                    *(ulong*)r5.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R6_X1:
                    *(byte*)r5.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R5_R6_X2:
                    *(ushort*)r5.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R6_X4:
                    *(uint*)r5.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R6_X8:
                    *(ulong*)r5.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R7_X1:
                    *(byte*)r5.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R5_R7_X2:
                    *(ushort*)r5.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R7_X4:
                    *(uint*)r5.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R5_R7_X8:
                    *(ulong*)r5.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R0_X1:
                    *(byte*)r6.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R6_R0_X2:
                    *(ushort*)r6.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R0_X4:
                    *(uint*)r6.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R0_X8:
                    *(ulong*)r6.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R1_X1:
                    *(byte*)r6.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R6_R1_X2:
                    *(ushort*)r6.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R1_X4:
                    *(uint*)r6.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R1_X8:
                    *(ulong*)r6.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R2_X1:
                    *(byte*)r6.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R6_R2_X2:
                    *(ushort*)r6.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R2_X4:
                    *(uint*)r6.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R2_X8:
                    *(ulong*)r6.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R3_X1:
                    *(byte*)r6.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R6_R3_X2:
                    *(ushort*)r6.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R3_X4:
                    *(uint*)r6.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R3_X8:
                    *(ulong*)r6.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R4_X1:
                    *(byte*)r6.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R6_R4_X2:
                    *(ushort*)r6.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R4_X4:
                    *(uint*)r6.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R4_X8:
                    *(ulong*)r6.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R5_X1:
                    *(byte*)r6.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R6_R5_X2:
                    *(ushort*)r6.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R5_X4:
                    *(uint*)r6.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R5_X8:
                    *(ulong*)r6.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R6_X1:
                    *(byte*)r6.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R6_R6_X2:
                    *(ushort*)r6.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R6_X4:
                    *(uint*)r6.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R6_X8:
                    *(ulong*)r6.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R7_X1:
                    *(byte*)r6.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R6_R7_X2:
                    *(ushort*)r6.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R7_X4:
                    *(uint*)r6.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R6_R7_X8:
                    *(ulong*)r6.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R0_X1:
                    *(byte*)r7.AsNUInt()[0] = r0[0]; code++; goto Next;
                case OpCode2.StInd_R7_R0_X2:
                    *(ushort*)r7.AsNUInt()[0] = r0.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R0_X4:
                    *(uint*)r7.AsNUInt()[0] = r0.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R0_X8:
                    *(ulong*)r7.AsNUInt()[0] = r0.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R1_X1:
                    *(byte*)r7.AsNUInt()[0] = r1[0]; code++; goto Next;
                case OpCode2.StInd_R7_R1_X2:
                    *(ushort*)r7.AsNUInt()[0] = r1.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R1_X4:
                    *(uint*)r7.AsNUInt()[0] = r1.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R1_X8:
                    *(ulong*)r7.AsNUInt()[0] = r1.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R2_X1:
                    *(byte*)r7.AsNUInt()[0] = r2[0]; code++; goto Next;
                case OpCode2.StInd_R7_R2_X2:
                    *(ushort*)r7.AsNUInt()[0] = r2.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R2_X4:
                    *(uint*)r7.AsNUInt()[0] = r2.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R2_X8:
                    *(ulong*)r7.AsNUInt()[0] = r2.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R3_X1:
                    *(byte*)r7.AsNUInt()[0] = r3[0]; code++; goto Next;
                case OpCode2.StInd_R7_R3_X2:
                    *(ushort*)r7.AsNUInt()[0] = r3.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R3_X4:
                    *(uint*)r7.AsNUInt()[0] = r3.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R3_X8:
                    *(ulong*)r7.AsNUInt()[0] = r3.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R4_X1:
                    *(byte*)r7.AsNUInt()[0] = r4[0]; code++; goto Next;
                case OpCode2.StInd_R7_R4_X2:
                    *(ushort*)r7.AsNUInt()[0] = r4.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R4_X4:
                    *(uint*)r7.AsNUInt()[0] = r4.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R4_X8:
                    *(ulong*)r7.AsNUInt()[0] = r4.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R5_X1:
                    *(byte*)r7.AsNUInt()[0] = r5[0]; code++; goto Next;
                case OpCode2.StInd_R7_R5_X2:
                    *(ushort*)r7.AsNUInt()[0] = r5.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R5_X4:
                    *(uint*)r7.AsNUInt()[0] = r5.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R5_X8:
                    *(ulong*)r7.AsNUInt()[0] = r5.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R6_X1:
                    *(byte*)r7.AsNUInt()[0] = r6[0]; code++; goto Next;
                case OpCode2.StInd_R7_R6_X2:
                    *(ushort*)r7.AsNUInt()[0] = r6.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R6_X4:
                    *(uint*)r7.AsNUInt()[0] = r6.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R6_X8:
                    *(ulong*)r7.AsNUInt()[0] = r6.AsUInt64()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R7_X1:
                    *(byte*)r7.AsNUInt()[0] = r7[0]; code++; goto Next;
                case OpCode2.StInd_R7_R7_X2:
                    *(ushort*)r7.AsNUInt()[0] = r7.AsUInt16()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R7_X4:
                    *(uint*)r7.AsNUInt()[0] = r7.AsUInt32()[0]; code++; goto Next;
                case OpCode2.StInd_R7_R7_X8:
                    *(ulong*)r7.AsNUInt()[0] = r7.AsUInt64()[0]; code++; goto Next;

                case OpCode2.Mov_R0_R0_XR1:
                    r0 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R0_XR2:
                    r0 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R0_XR4:
                    r0 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R0_XR8:
                    r0 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R1_XR1:
                    r0 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R1_XR2:
                    r0 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R1_XR4:
                    r0 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R1_XR8:
                    r0 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R2_XR1:
                    r0 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R2_XR2:
                    r0 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R2_XR4:
                    r0 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R2_XR8:
                    r0 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R3_XR1:
                    r0 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R3_XR2:
                    r0 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R3_XR4:
                    r0 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R3_XR8:
                    r0 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R4_XR1:
                    r0 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R4_XR2:
                    r0 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R4_XR4:
                    r0 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R4_XR8:
                    r0 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R5_XR1:
                    r0 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R5_XR2:
                    r0 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R5_XR4:
                    r0 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R5_XR8:
                    r0 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R6_XR1:
                    r0 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R6_XR2:
                    r0 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R6_XR4:
                    r0 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R6_XR8:
                    r0 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R7_XR1:
                    r0 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R0_R7_XR2:
                    r0 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R7_XR4:
                    r0 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R0_R7_XR8:
                    r0 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R0_XR1:
                    r1 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R0_XR2:
                    r1 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R0_XR4:
                    r1 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R0_XR8:
                    r1 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R1_XR1:
                    r1 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R1_XR2:
                    r1 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R1_XR4:
                    r1 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R1_XR8:
                    r1 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R2_XR1:
                    r1 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R2_XR2:
                    r1 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R2_XR4:
                    r1 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R2_XR8:
                    r1 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R3_XR1:
                    r1 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R3_XR2:
                    r1 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R3_XR4:
                    r1 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R3_XR8:
                    r1 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R4_XR1:
                    r1 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R4_XR2:
                    r1 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R4_XR4:
                    r1 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R4_XR8:
                    r1 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R5_XR1:
                    r1 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R5_XR2:
                    r1 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R5_XR4:
                    r1 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R5_XR8:
                    r1 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R6_XR1:
                    r1 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R6_XR2:
                    r1 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R6_XR4:
                    r1 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R6_XR8:
                    r1 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R7_XR1:
                    r1 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R1_R7_XR2:
                    r1 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R7_XR4:
                    r1 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R1_R7_XR8:
                    r1 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R0_XR1:
                    r2 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R0_XR2:
                    r2 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R0_XR4:
                    r2 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R0_XR8:
                    r2 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R1_XR1:
                    r2 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R1_XR2:
                    r2 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R1_XR4:
                    r2 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R1_XR8:
                    r2 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R2_XR1:
                    r2 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R2_XR2:
                    r2 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R2_XR4:
                    r2 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R2_XR8:
                    r2 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R3_XR1:
                    r2 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R3_XR2:
                    r2 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R3_XR4:
                    r2 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R3_XR8:
                    r2 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R4_XR1:
                    r2 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R4_XR2:
                    r2 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R4_XR4:
                    r2 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R4_XR8:
                    r2 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R5_XR1:
                    r2 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R5_XR2:
                    r2 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R5_XR4:
                    r2 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R5_XR8:
                    r2 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R6_XR1:
                    r2 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R6_XR2:
                    r2 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R6_XR4:
                    r2 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R6_XR8:
                    r2 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R7_XR1:
                    r2 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R2_R7_XR2:
                    r2 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R7_XR4:
                    r2 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R2_R7_XR8:
                    r2 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R0_XR1:
                    r3 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R0_XR2:
                    r3 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R0_XR4:
                    r3 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R0_XR8:
                    r3 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R1_XR1:
                    r3 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R1_XR2:
                    r3 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R1_XR4:
                    r3 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R1_XR8:
                    r3 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R2_XR1:
                    r3 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R2_XR2:
                    r3 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R2_XR4:
                    r3 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R2_XR8:
                    r3 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R3_XR1:
                    r3 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R3_XR2:
                    r3 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R3_XR4:
                    r3 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R3_XR8:
                    r3 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R4_XR1:
                    r3 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R4_XR2:
                    r3 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R4_XR4:
                    r3 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R4_XR8:
                    r3 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R5_XR1:
                    r3 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R5_XR2:
                    r3 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R5_XR4:
                    r3 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R5_XR8:
                    r3 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R6_XR1:
                    r3 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R6_XR2:
                    r3 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R6_XR4:
                    r3 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R6_XR8:
                    r3 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R7_XR1:
                    r3 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R3_R7_XR2:
                    r3 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R7_XR4:
                    r3 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R3_R7_XR8:
                    r3 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R0_XR1:
                    r4 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R0_XR2:
                    r4 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R0_XR4:
                    r4 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R0_XR8:
                    r4 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R1_XR1:
                    r4 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R1_XR2:
                    r4 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R1_XR4:
                    r4 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R1_XR8:
                    r4 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R2_XR1:
                    r4 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R2_XR2:
                    r4 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R2_XR4:
                    r4 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R2_XR8:
                    r4 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R3_XR1:
                    r4 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R3_XR2:
                    r4 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R3_XR4:
                    r4 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R3_XR8:
                    r4 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R4_XR1:
                    r4 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R4_XR2:
                    r4 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R4_XR4:
                    r4 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R4_XR8:
                    r4 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R5_XR1:
                    r4 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R5_XR2:
                    r4 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R5_XR4:
                    r4 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R5_XR8:
                    r4 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R6_XR1:
                    r4 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R6_XR2:
                    r4 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R6_XR4:
                    r4 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R6_XR8:
                    r4 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R7_XR1:
                    r4 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R4_R7_XR2:
                    r4 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R7_XR4:
                    r4 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R4_R7_XR8:
                    r4 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R0_XR1:
                    r5 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R0_XR2:
                    r5 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R0_XR4:
                    r5 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R0_XR8:
                    r5 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R1_XR1:
                    r5 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R1_XR2:
                    r5 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R1_XR4:
                    r5 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R1_XR8:
                    r5 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R2_XR1:
                    r5 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R2_XR2:
                    r5 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R2_XR4:
                    r5 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R2_XR8:
                    r5 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R3_XR1:
                    r5 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R3_XR2:
                    r5 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R3_XR4:
                    r5 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R3_XR8:
                    r5 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R4_XR1:
                    r5 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R4_XR2:
                    r5 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R4_XR4:
                    r5 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R4_XR8:
                    r5 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R5_XR1:
                    r5 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R5_XR2:
                    r5 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R5_XR4:
                    r5 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R5_XR8:
                    r5 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R6_XR1:
                    r5 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R6_XR2:
                    r5 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R6_XR4:
                    r5 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R6_XR8:
                    r5 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R7_XR1:
                    r5 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R5_R7_XR2:
                    r5 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R7_XR4:
                    r5 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R5_R7_XR8:
                    r5 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R0_XR1:
                    r6 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R0_XR2:
                    r6 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R0_XR4:
                    r6 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R0_XR8:
                    r6 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R1_XR1:
                    r6 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R1_XR2:
                    r6 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R1_XR4:
                    r6 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R1_XR8:
                    r6 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R2_XR1:
                    r6 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R2_XR2:
                    r6 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R2_XR4:
                    r6 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R2_XR8:
                    r6 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R3_XR1:
                    r6 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R3_XR2:
                    r6 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R3_XR4:
                    r6 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R3_XR8:
                    r6 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R4_XR1:
                    r6 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R4_XR2:
                    r6 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R4_XR4:
                    r6 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R4_XR8:
                    r6 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R5_XR1:
                    r6 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R5_XR2:
                    r6 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R5_XR4:
                    r6 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R5_XR8:
                    r6 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R6_XR1:
                    r6 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R6_XR2:
                    r6 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R6_XR4:
                    r6 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R6_XR8:
                    r6 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R7_XR1:
                    r6 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R6_R7_XR2:
                    r6 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R7_XR4:
                    r6 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R6_R7_XR8:
                    r6 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R0_XR1:
                    r7 = r0 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R0_XR2:
                    r7 = r0 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R0_XR4:
                    r7 = r0 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R0_XR8:
                    r7 = r0 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R1_XR1:
                    r7 = r1 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R1_XR2:
                    r7 = r1 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R1_XR4:
                    r7 = r1 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R1_XR8:
                    r7 = r1 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R2_XR1:
                    r7 = r2 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R2_XR2:
                    r7 = r2 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R2_XR4:
                    r7 = r2 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R2_XR8:
                    r7 = r2 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R3_XR1:
                    r7 = r3 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R3_XR2:
                    r7 = r3 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R3_XR4:
                    r7 = r3 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R3_XR8:
                    r7 = r3 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R4_XR1:
                    r7 = r4 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R4_XR2:
                    r7 = r4 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R4_XR4:
                    r7 = r4 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R4_XR8:
                    r7 = r4 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R5_XR1:
                    r7 = r5 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R5_XR2:
                    r7 = r5 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R5_XR4:
                    r7 = r5 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R5_XR8:
                    r7 = r5 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R6_XR1:
                    r7 = r6 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R6_XR2:
                    r7 = r6 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R6_XR4:
                    r7 = r6 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R6_XR8:
                    r7 = r6 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R7_XR1:
                    r7 = r7 & Vector128.CreateScalar(byte.MaxValue); code++; goto Next;
                case OpCode2.Mov_R7_R7_XR2:
                    r7 = r7 & Vector128.CreateScalar(ushort.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R7_XR4:
                    r7 = r7 & Vector128.CreateScalar(uint.MaxValue).AsByte(); code++; goto Next;
                case OpCode2.Mov_R7_R7_XR8:
                    r7 = r7 & Vector128.CreateScalar(ulong.MaxValue).AsByte(); code++; goto Next;

                case OpCode2.AddI_R0_R0_X1:
                    r0 = (r0.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R1_X1:
                    r0 = (r0.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R2_X1:
                    r0 = (r0.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R3_X1:
                    r0 = (r0.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R4_X1:
                    r0 = (r0.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R5_X1:
                    r0 = (r0.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R6_X1:
                    r0 = (r0.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R7_X1:
                    r0 = (r0.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R0_X1:
                    r1 = (r1.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R1_X1:
                    r1 = (r1.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R2_X1:
                    r1 = (r1.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R3_X1:
                    r1 = (r1.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R4_X1:
                    r1 = (r1.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R5_X1:
                    r1 = (r1.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R6_X1:
                    r1 = (r1.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R7_X1:
                    r1 = (r1.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R0_X1:
                    r2 = (r2.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R1_X1:
                    r2 = (r2.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R2_X1:
                    r2 = (r2.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R3_X1:
                    r2 = (r2.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R4_X1:
                    r2 = (r2.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R5_X1:
                    r2 = (r2.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R6_X1:
                    r2 = (r2.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R7_X1:
                    r2 = (r2.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R0_X1:
                    r3 = (r3.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R1_X1:
                    r3 = (r3.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R2_X1:
                    r3 = (r3.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R3_X1:
                    r3 = (r3.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R4_X1:
                    r3 = (r3.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R5_X1:
                    r3 = (r3.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R6_X1:
                    r3 = (r3.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R7_X1:
                    r3 = (r3.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R0_X1:
                    r4 = (r4.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R1_X1:
                    r4 = (r4.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R2_X1:
                    r4 = (r4.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R3_X1:
                    r4 = (r4.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R4_X1:
                    r4 = (r4.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R5_X1:
                    r4 = (r4.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R6_X1:
                    r4 = (r4.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R7_X1:
                    r4 = (r4.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R0_X1:
                    r5 = (r5.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R1_X1:
                    r5 = (r5.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R2_X1:
                    r5 = (r5.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R3_X1:
                    r5 = (r5.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R4_X1:
                    r5 = (r5.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R5_X1:
                    r5 = (r5.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R6_X1:
                    r5 = (r5.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R7_X1:
                    r5 = (r5.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R0_X1:
                    r6 = (r6.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R1_X1:
                    r6 = (r6.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R2_X1:
                    r6 = (r6.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R3_X1:
                    r6 = (r6.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R4_X1:
                    r6 = (r6.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R5_X1:
                    r6 = (r6.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R6_X1:
                    r6 = (r6.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R7_X1:
                    r6 = (r6.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R0_X1:
                    r7 = (r7.AsSByte() + r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R1_X1:
                    r7 = (r7.AsSByte() + r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R2_X1:
                    r7 = (r7.AsSByte() + r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R3_X1:
                    r7 = (r7.AsSByte() + r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R4_X1:
                    r7 = (r7.AsSByte() + r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R5_X1:
                    r7 = (r7.AsSByte() + r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R6_X1:
                    r7 = (r7.AsSByte() + r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R7_X1:
                    r7 = (r7.AsSByte() + r7.AsSByte()).AsByte(); code++; goto Next;

                case OpCode2.SubI_R0_R0_X1:
                    r0 = (r0.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R1_X1:
                    r0 = (r0.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R2_X1:
                    r0 = (r0.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R3_X1:
                    r0 = (r0.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R4_X1:
                    r0 = (r0.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R5_X1:
                    r0 = (r0.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R6_X1:
                    r0 = (r0.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R7_X1:
                    r0 = (r0.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R0_X1:
                    r1 = (r1.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R1_X1:
                    r1 = (r1.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R2_X1:
                    r1 = (r1.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R3_X1:
                    r1 = (r1.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R4_X1:
                    r1 = (r1.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R5_X1:
                    r1 = (r1.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R6_X1:
                    r1 = (r1.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R7_X1:
                    r1 = (r1.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R0_X1:
                    r2 = (r2.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R1_X1:
                    r2 = (r2.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R2_X1:
                    r2 = (r2.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R3_X1:
                    r2 = (r2.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R4_X1:
                    r2 = (r2.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R5_X1:
                    r2 = (r2.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R6_X1:
                    r2 = (r2.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R7_X1:
                    r2 = (r2.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R0_X1:
                    r3 = (r3.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R1_X1:
                    r3 = (r3.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R2_X1:
                    r3 = (r3.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R3_X1:
                    r3 = (r3.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R4_X1:
                    r3 = (r3.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R5_X1:
                    r3 = (r3.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R6_X1:
                    r3 = (r3.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R7_X1:
                    r3 = (r3.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R0_X1:
                    r4 = (r4.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R1_X1:
                    r4 = (r4.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R2_X1:
                    r4 = (r4.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R3_X1:
                    r4 = (r4.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R4_X1:
                    r4 = (r4.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R5_X1:
                    r4 = (r4.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R6_X1:
                    r4 = (r4.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R7_X1:
                    r4 = (r4.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R0_X1:
                    r5 = (r5.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R1_X1:
                    r5 = (r5.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R2_X1:
                    r5 = (r5.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R3_X1:
                    r5 = (r5.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R4_X1:
                    r5 = (r5.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R5_X1:
                    r5 = (r5.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R6_X1:
                    r5 = (r5.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R7_X1:
                    r5 = (r5.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R0_X1:
                    r6 = (r6.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R1_X1:
                    r6 = (r6.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R2_X1:
                    r6 = (r6.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R3_X1:
                    r6 = (r6.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R4_X1:
                    r6 = (r6.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R5_X1:
                    r6 = (r6.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R6_X1:
                    r6 = (r6.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R7_X1:
                    r6 = (r6.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R0_X1:
                    r7 = (r7.AsSByte() - r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R1_X1:
                    r7 = (r7.AsSByte() - r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R2_X1:
                    r7 = (r7.AsSByte() - r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R3_X1:
                    r7 = (r7.AsSByte() - r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R4_X1:
                    r7 = (r7.AsSByte() - r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R5_X1:
                    r7 = (r7.AsSByte() - r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R6_X1:
                    r7 = (r7.AsSByte() - r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R7_X1:
                    r7 = (r7.AsSByte() - r7.AsSByte()).AsByte(); code++; goto Next;

                case OpCode2.MulI_R0_R0_X1:
                    r0 = (r0.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R1_X1:
                    r0 = (r0.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R2_X1:
                    r0 = (r0.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R3_X1:
                    r0 = (r0.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R4_X1:
                    r0 = (r0.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R5_X1:
                    r0 = (r0.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R6_X1:
                    r0 = (r0.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R7_X1:
                    r0 = (r0.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R0_X1:
                    r1 = (r1.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R1_X1:
                    r1 = (r1.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R2_X1:
                    r1 = (r1.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R3_X1:
                    r1 = (r1.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R4_X1:
                    r1 = (r1.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R5_X1:
                    r1 = (r1.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R6_X1:
                    r1 = (r1.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R7_X1:
                    r1 = (r1.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R0_X1:
                    r2 = (r2.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R1_X1:
                    r2 = (r2.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R2_X1:
                    r2 = (r2.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R3_X1:
                    r2 = (r2.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R4_X1:
                    r2 = (r2.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R5_X1:
                    r2 = (r2.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R6_X1:
                    r2 = (r2.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R7_X1:
                    r2 = (r2.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R0_X1:
                    r3 = (r3.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R1_X1:
                    r3 = (r3.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R2_X1:
                    r3 = (r3.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R3_X1:
                    r3 = (r3.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R4_X1:
                    r3 = (r3.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R5_X1:
                    r3 = (r3.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R6_X1:
                    r3 = (r3.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R7_X1:
                    r3 = (r3.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R0_X1:
                    r4 = (r4.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R1_X1:
                    r4 = (r4.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R2_X1:
                    r4 = (r4.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R3_X1:
                    r4 = (r4.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R4_X1:
                    r4 = (r4.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R5_X1:
                    r4 = (r4.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R6_X1:
                    r4 = (r4.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R7_X1:
                    r4 = (r4.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R0_X1:
                    r5 = (r5.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R1_X1:
                    r5 = (r5.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R2_X1:
                    r5 = (r5.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R3_X1:
                    r5 = (r5.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R4_X1:
                    r5 = (r5.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R5_X1:
                    r5 = (r5.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R6_X1:
                    r5 = (r5.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R7_X1:
                    r5 = (r5.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R0_X1:
                    r6 = (r6.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R1_X1:
                    r6 = (r6.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R2_X1:
                    r6 = (r6.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R3_X1:
                    r6 = (r6.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R4_X1:
                    r6 = (r6.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R5_X1:
                    r6 = (r6.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R6_X1:
                    r6 = (r6.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R7_X1:
                    r6 = (r6.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R0_X1:
                    r7 = (r7.AsSByte() * r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R1_X1:
                    r7 = (r7.AsSByte() * r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R2_X1:
                    r7 = (r7.AsSByte() * r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R3_X1:
                    r7 = (r7.AsSByte() * r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R4_X1:
                    r7 = (r7.AsSByte() * r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R5_X1:
                    r7 = (r7.AsSByte() * r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R6_X1:
                    r7 = (r7.AsSByte() * r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R7_X1:
                    r7 = (r7.AsSByte() * r7.AsSByte()).AsByte(); code++; goto Next;

                case OpCode2.DivI_R0_R0_X1:
                    r0 = (r0.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R1_X1:
                    r0 = (r0.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R2_X1:
                    r0 = (r0.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R3_X1:
                    r0 = (r0.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R4_X1:
                    r0 = (r0.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R5_X1:
                    r0 = (r0.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R6_X1:
                    r0 = (r0.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R7_X1:
                    r0 = (r0.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R0_X1:
                    r1 = (r1.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R1_X1:
                    r1 = (r1.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R2_X1:
                    r1 = (r1.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R3_X1:
                    r1 = (r1.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R4_X1:
                    r1 = (r1.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R5_X1:
                    r1 = (r1.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R6_X1:
                    r1 = (r1.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R7_X1:
                    r1 = (r1.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R0_X1:
                    r2 = (r2.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R1_X1:
                    r2 = (r2.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R2_X1:
                    r2 = (r2.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R3_X1:
                    r2 = (r2.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R4_X1:
                    r2 = (r2.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R5_X1:
                    r2 = (r2.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R6_X1:
                    r2 = (r2.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R7_X1:
                    r2 = (r2.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R0_X1:
                    r3 = (r3.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R1_X1:
                    r3 = (r3.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R2_X1:
                    r3 = (r3.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R3_X1:
                    r3 = (r3.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R4_X1:
                    r3 = (r3.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R5_X1:
                    r3 = (r3.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R6_X1:
                    r3 = (r3.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R7_X1:
                    r3 = (r3.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R0_X1:
                    r4 = (r4.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R1_X1:
                    r4 = (r4.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R2_X1:
                    r4 = (r4.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R3_X1:
                    r4 = (r4.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R4_X1:
                    r4 = (r4.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R5_X1:
                    r4 = (r4.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R6_X1:
                    r4 = (r4.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R7_X1:
                    r4 = (r4.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R0_X1:
                    r5 = (r5.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R1_X1:
                    r5 = (r5.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R2_X1:
                    r5 = (r5.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R3_X1:
                    r5 = (r5.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R4_X1:
                    r5 = (r5.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R5_X1:
                    r5 = (r5.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R6_X1:
                    r5 = (r5.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R7_X1:
                    r5 = (r5.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R0_X1:
                    r6 = (r6.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R1_X1:
                    r6 = (r6.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R2_X1:
                    r6 = (r6.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R3_X1:
                    r6 = (r6.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R4_X1:
                    r6 = (r6.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R5_X1:
                    r6 = (r6.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R6_X1:
                    r6 = (r6.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R7_X1:
                    r6 = (r6.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R0_X1:
                    r7 = (r7.AsSByte() / r0.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R1_X1:
                    r7 = (r7.AsSByte() / r1.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R2_X1:
                    r7 = (r7.AsSByte() / r2.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R3_X1:
                    r7 = (r7.AsSByte() / r3.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R4_X1:
                    r7 = (r7.AsSByte() / r4.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R5_X1:
                    r7 = (r7.AsSByte() / r5.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R6_X1:
                    r7 = (r7.AsSByte() / r6.AsSByte()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R7_X1:
                    r7 = (r7.AsSByte() / r7.AsSByte()).AsByte(); code++; goto Next;

                case OpCode2.AddI_R0_R0_X2:
                    r0 = (r0.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R1_X2:
                    r0 = (r0.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R2_X2:
                    r0 = (r0.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R3_X2:
                    r0 = (r0.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R4_X2:
                    r0 = (r0.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R5_X2:
                    r0 = (r0.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R6_X2:
                    r0 = (r0.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R7_X2:
                    r0 = (r0.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R0_X2:
                    r1 = (r1.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R1_X2:
                    r1 = (r1.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R2_X2:
                    r1 = (r1.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R3_X2:
                    r1 = (r1.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R4_X2:
                    r1 = (r1.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R5_X2:
                    r1 = (r1.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R6_X2:
                    r1 = (r1.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R7_X2:
                    r1 = (r1.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R0_X2:
                    r2 = (r2.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R1_X2:
                    r2 = (r2.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R2_X2:
                    r2 = (r2.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R3_X2:
                    r2 = (r2.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R4_X2:
                    r2 = (r2.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R5_X2:
                    r2 = (r2.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R6_X2:
                    r2 = (r2.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R7_X2:
                    r2 = (r2.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R0_X2:
                    r3 = (r3.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R1_X2:
                    r3 = (r3.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R2_X2:
                    r3 = (r3.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R3_X2:
                    r3 = (r3.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R4_X2:
                    r3 = (r3.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R5_X2:
                    r3 = (r3.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R6_X2:
                    r3 = (r3.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R7_X2:
                    r3 = (r3.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R0_X2:
                    r4 = (r4.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R1_X2:
                    r4 = (r4.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R2_X2:
                    r4 = (r4.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R3_X2:
                    r4 = (r4.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R4_X2:
                    r4 = (r4.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R5_X2:
                    r4 = (r4.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R6_X2:
                    r4 = (r4.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R7_X2:
                    r4 = (r4.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R0_X2:
                    r5 = (r5.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R1_X2:
                    r5 = (r5.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R2_X2:
                    r5 = (r5.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R3_X2:
                    r5 = (r5.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R4_X2:
                    r5 = (r5.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R5_X2:
                    r5 = (r5.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R6_X2:
                    r5 = (r5.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R7_X2:
                    r5 = (r5.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R0_X2:
                    r6 = (r6.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R1_X2:
                    r6 = (r6.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R2_X2:
                    r6 = (r6.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R3_X2:
                    r6 = (r6.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R4_X2:
                    r6 = (r6.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R5_X2:
                    r6 = (r6.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R6_X2:
                    r6 = (r6.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R7_X2:
                    r6 = (r6.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R0_X2:
                    r7 = (r7.AsInt16() + r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R1_X2:
                    r7 = (r7.AsInt16() + r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R2_X2:
                    r7 = (r7.AsInt16() + r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R3_X2:
                    r7 = (r7.AsInt16() + r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R4_X2:
                    r7 = (r7.AsInt16() + r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R5_X2:
                    r7 = (r7.AsInt16() + r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R6_X2:
                    r7 = (r7.AsInt16() + r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R7_X2:
                    r7 = (r7.AsInt16() + r7.AsInt16()).AsByte(); code++; goto Next;

                case OpCode2.SubI_R0_R0_X2:
                    r0 = (r0.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R1_X2:
                    r0 = (r0.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R2_X2:
                    r0 = (r0.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R3_X2:
                    r0 = (r0.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R4_X2:
                    r0 = (r0.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R5_X2:
                    r0 = (r0.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R6_X2:
                    r0 = (r0.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R7_X2:
                    r0 = (r0.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R0_X2:
                    r1 = (r1.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R1_X2:
                    r1 = (r1.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R2_X2:
                    r1 = (r1.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R3_X2:
                    r1 = (r1.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R4_X2:
                    r1 = (r1.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R5_X2:
                    r1 = (r1.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R6_X2:
                    r1 = (r1.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R7_X2:
                    r1 = (r1.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R0_X2:
                    r2 = (r2.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R1_X2:
                    r2 = (r2.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R2_X2:
                    r2 = (r2.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R3_X2:
                    r2 = (r2.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R4_X2:
                    r2 = (r2.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R5_X2:
                    r2 = (r2.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R6_X2:
                    r2 = (r2.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R7_X2:
                    r2 = (r2.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R0_X2:
                    r3 = (r3.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R1_X2:
                    r3 = (r3.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R2_X2:
                    r3 = (r3.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R3_X2:
                    r3 = (r3.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R4_X2:
                    r3 = (r3.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R5_X2:
                    r3 = (r3.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R6_X2:
                    r3 = (r3.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R7_X2:
                    r3 = (r3.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R0_X2:
                    r4 = (r4.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R1_X2:
                    r4 = (r4.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R2_X2:
                    r4 = (r4.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R3_X2:
                    r4 = (r4.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R4_X2:
                    r4 = (r4.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R5_X2:
                    r4 = (r4.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R6_X2:
                    r4 = (r4.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R7_X2:
                    r4 = (r4.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R0_X2:
                    r5 = (r5.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R1_X2:
                    r5 = (r5.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R2_X2:
                    r5 = (r5.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R3_X2:
                    r5 = (r5.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R4_X2:
                    r5 = (r5.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R5_X2:
                    r5 = (r5.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R6_X2:
                    r5 = (r5.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R7_X2:
                    r5 = (r5.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R0_X2:
                    r6 = (r6.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R1_X2:
                    r6 = (r6.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R2_X2:
                    r6 = (r6.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R3_X2:
                    r6 = (r6.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R4_X2:
                    r6 = (r6.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R5_X2:
                    r6 = (r6.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R6_X2:
                    r6 = (r6.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R7_X2:
                    r6 = (r6.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R0_X2:
                    r7 = (r7.AsInt16() - r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R1_X2:
                    r7 = (r7.AsInt16() - r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R2_X2:
                    r7 = (r7.AsInt16() - r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R3_X2:
                    r7 = (r7.AsInt16() - r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R4_X2:
                    r7 = (r7.AsInt16() - r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R5_X2:
                    r7 = (r7.AsInt16() - r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R6_X2:
                    r7 = (r7.AsInt16() - r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R7_X2:
                    r7 = (r7.AsInt16() - r7.AsInt16()).AsByte(); code++; goto Next;

                case OpCode2.MulI_R0_R0_X2:
                    r0 = (r0.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R1_X2:
                    r0 = (r0.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R2_X2:
                    r0 = (r0.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R3_X2:
                    r0 = (r0.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R4_X2:
                    r0 = (r0.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R5_X2:
                    r0 = (r0.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R6_X2:
                    r0 = (r0.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R7_X2:
                    r0 = (r0.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R0_X2:
                    r1 = (r1.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R1_X2:
                    r1 = (r1.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R2_X2:
                    r1 = (r1.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R3_X2:
                    r1 = (r1.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R4_X2:
                    r1 = (r1.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R5_X2:
                    r1 = (r1.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R6_X2:
                    r1 = (r1.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R7_X2:
                    r1 = (r1.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R0_X2:
                    r2 = (r2.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R1_X2:
                    r2 = (r2.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R2_X2:
                    r2 = (r2.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R3_X2:
                    r2 = (r2.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R4_X2:
                    r2 = (r2.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R5_X2:
                    r2 = (r2.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R6_X2:
                    r2 = (r2.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R7_X2:
                    r2 = (r2.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R0_X2:
                    r3 = (r3.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R1_X2:
                    r3 = (r3.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R2_X2:
                    r3 = (r3.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R3_X2:
                    r3 = (r3.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R4_X2:
                    r3 = (r3.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R5_X2:
                    r3 = (r3.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R6_X2:
                    r3 = (r3.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R7_X2:
                    r3 = (r3.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R0_X2:
                    r4 = (r4.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R1_X2:
                    r4 = (r4.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R2_X2:
                    r4 = (r4.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R3_X2:
                    r4 = (r4.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R4_X2:
                    r4 = (r4.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R5_X2:
                    r4 = (r4.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R6_X2:
                    r4 = (r4.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R7_X2:
                    r4 = (r4.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R0_X2:
                    r5 = (r5.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R1_X2:
                    r5 = (r5.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R2_X2:
                    r5 = (r5.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R3_X2:
                    r5 = (r5.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R4_X2:
                    r5 = (r5.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R5_X2:
                    r5 = (r5.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R6_X2:
                    r5 = (r5.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R7_X2:
                    r5 = (r5.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R0_X2:
                    r6 = (r6.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R1_X2:
                    r6 = (r6.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R2_X2:
                    r6 = (r6.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R3_X2:
                    r6 = (r6.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R4_X2:
                    r6 = (r6.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R5_X2:
                    r6 = (r6.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R6_X2:
                    r6 = (r6.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R7_X2:
                    r6 = (r6.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R0_X2:
                    r7 = (r7.AsInt16() * r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R1_X2:
                    r7 = (r7.AsInt16() * r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R2_X2:
                    r7 = (r7.AsInt16() * r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R3_X2:
                    r7 = (r7.AsInt16() * r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R4_X2:
                    r7 = (r7.AsInt16() * r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R5_X2:
                    r7 = (r7.AsInt16() * r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R6_X2:
                    r7 = (r7.AsInt16() * r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R7_X2:
                    r7 = (r7.AsInt16() * r7.AsInt16()).AsByte(); code++; goto Next;

                case OpCode2.DivI_R0_R0_X2:
                    r0 = (r0.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R1_X2:
                    r0 = (r0.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R2_X2:
                    r0 = (r0.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R3_X2:
                    r0 = (r0.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R4_X2:
                    r0 = (r0.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R5_X2:
                    r0 = (r0.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R6_X2:
                    r0 = (r0.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R7_X2:
                    r0 = (r0.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R0_X2:
                    r1 = (r1.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R1_X2:
                    r1 = (r1.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R2_X2:
                    r1 = (r1.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R3_X2:
                    r1 = (r1.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R4_X2:
                    r1 = (r1.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R5_X2:
                    r1 = (r1.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R6_X2:
                    r1 = (r1.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R7_X2:
                    r1 = (r1.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R0_X2:
                    r2 = (r2.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R1_X2:
                    r2 = (r2.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R2_X2:
                    r2 = (r2.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R3_X2:
                    r2 = (r2.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R4_X2:
                    r2 = (r2.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R5_X2:
                    r2 = (r2.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R6_X2:
                    r2 = (r2.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R7_X2:
                    r2 = (r2.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R0_X2:
                    r3 = (r3.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R1_X2:
                    r3 = (r3.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R2_X2:
                    r3 = (r3.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R3_X2:
                    r3 = (r3.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R4_X2:
                    r3 = (r3.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R5_X2:
                    r3 = (r3.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R6_X2:
                    r3 = (r3.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R7_X2:
                    r3 = (r3.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R0_X2:
                    r4 = (r4.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R1_X2:
                    r4 = (r4.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R2_X2:
                    r4 = (r4.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R3_X2:
                    r4 = (r4.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R4_X2:
                    r4 = (r4.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R5_X2:
                    r4 = (r4.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R6_X2:
                    r4 = (r4.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R7_X2:
                    r4 = (r4.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R0_X2:
                    r5 = (r5.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R1_X2:
                    r5 = (r5.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R2_X2:
                    r5 = (r5.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R3_X2:
                    r5 = (r5.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R4_X2:
                    r5 = (r5.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R5_X2:
                    r5 = (r5.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R6_X2:
                    r5 = (r5.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R7_X2:
                    r5 = (r5.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R0_X2:
                    r6 = (r6.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R1_X2:
                    r6 = (r6.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R2_X2:
                    r6 = (r6.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R3_X2:
                    r6 = (r6.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R4_X2:
                    r6 = (r6.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R5_X2:
                    r6 = (r6.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R6_X2:
                    r6 = (r6.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R7_X2:
                    r6 = (r6.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R0_X2:
                    r7 = (r7.AsInt16() / r0.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R1_X2:
                    r7 = (r7.AsInt16() / r1.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R2_X2:
                    r7 = (r7.AsInt16() / r2.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R3_X2:
                    r7 = (r7.AsInt16() / r3.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R4_X2:
                    r7 = (r7.AsInt16() / r4.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R5_X2:
                    r7 = (r7.AsInt16() / r5.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R6_X2:
                    r7 = (r7.AsInt16() / r6.AsInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R7_X2:
                    r7 = (r7.AsInt16() / r7.AsInt16()).AsByte(); code++; goto Next;

                case OpCode2.AddI_R0_R0_X4:
                    r0 = (r0.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R1_X4:
                    r0 = (r0.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R2_X4:
                    r0 = (r0.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R3_X4:
                    r0 = (r0.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R4_X4:
                    r0 = (r0.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R5_X4:
                    r0 = (r0.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R6_X4:
                    r0 = (r0.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R7_X4:
                    r0 = (r0.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R0_X4:
                    r1 = (r1.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R1_X4:
                    r1 = (r1.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R2_X4:
                    r1 = (r1.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R3_X4:
                    r1 = (r1.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R4_X4:
                    r1 = (r1.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R5_X4:
                    r1 = (r1.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R6_X4:
                    r1 = (r1.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R7_X4:
                    r1 = (r1.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R0_X4:
                    r2 = (r2.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R1_X4:
                    r2 = (r2.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R2_X4:
                    r2 = (r2.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R3_X4:
                    r2 = (r2.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R4_X4:
                    r2 = (r2.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R5_X4:
                    r2 = (r2.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R6_X4:
                    r2 = (r2.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R7_X4:
                    r2 = (r2.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R0_X4:
                    r3 = (r3.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R1_X4:
                    r3 = (r3.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R2_X4:
                    r3 = (r3.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R3_X4:
                    r3 = (r3.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R4_X4:
                    r3 = (r3.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R5_X4:
                    r3 = (r3.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R6_X4:
                    r3 = (r3.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R7_X4:
                    r3 = (r3.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R0_X4:
                    r4 = (r4.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R1_X4:
                    r4 = (r4.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R2_X4:
                    r4 = (r4.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R3_X4:
                    r4 = (r4.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R4_X4:
                    r4 = (r4.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R5_X4:
                    r4 = (r4.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R6_X4:
                    r4 = (r4.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R7_X4:
                    r4 = (r4.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R0_X4:
                    r5 = (r5.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R1_X4:
                    r5 = (r5.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R2_X4:
                    r5 = (r5.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R3_X4:
                    r5 = (r5.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R4_X4:
                    r5 = (r5.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R5_X4:
                    r5 = (r5.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R6_X4:
                    r5 = (r5.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R7_X4:
                    r5 = (r5.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R0_X4:
                    r6 = (r6.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R1_X4:
                    r6 = (r6.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R2_X4:
                    r6 = (r6.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R3_X4:
                    r6 = (r6.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R4_X4:
                    r6 = (r6.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R5_X4:
                    r6 = (r6.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R6_X4:
                    r6 = (r6.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R7_X4:
                    r6 = (r6.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R0_X4:
                    r7 = (r7.AsInt32() + r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R1_X4:
                    r7 = (r7.AsInt32() + r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R2_X4:
                    r7 = (r7.AsInt32() + r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R3_X4:
                    r7 = (r7.AsInt32() + r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R4_X4:
                    r7 = (r7.AsInt32() + r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R5_X4:
                    r7 = (r7.AsInt32() + r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R6_X4:
                    r7 = (r7.AsInt32() + r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R7_X4:
                    r7 = (r7.AsInt32() + r7.AsInt32()).AsByte(); code++; goto Next;

                case OpCode2.SubI_R0_R0_X4:
                    r0 = (r0.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R1_X4:
                    r0 = (r0.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R2_X4:
                    r0 = (r0.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R3_X4:
                    r0 = (r0.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R4_X4:
                    r0 = (r0.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R5_X4:
                    r0 = (r0.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R6_X4:
                    r0 = (r0.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R7_X4:
                    r0 = (r0.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R0_X4:
                    r1 = (r1.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R1_X4:
                    r1 = (r1.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R2_X4:
                    r1 = (r1.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R3_X4:
                    r1 = (r1.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R4_X4:
                    r1 = (r1.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R5_X4:
                    r1 = (r1.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R6_X4:
                    r1 = (r1.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R7_X4:
                    r1 = (r1.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R0_X4:
                    r2 = (r2.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R1_X4:
                    r2 = (r2.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R2_X4:
                    r2 = (r2.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R3_X4:
                    r2 = (r2.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R4_X4:
                    r2 = (r2.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R5_X4:
                    r2 = (r2.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R6_X4:
                    r2 = (r2.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R7_X4:
                    r2 = (r2.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R0_X4:
                    r3 = (r3.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R1_X4:
                    r3 = (r3.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R2_X4:
                    r3 = (r3.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R3_X4:
                    r3 = (r3.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R4_X4:
                    r3 = (r3.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R5_X4:
                    r3 = (r3.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R6_X4:
                    r3 = (r3.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R7_X4:
                    r3 = (r3.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R0_X4:
                    r4 = (r4.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R1_X4:
                    r4 = (r4.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R2_X4:
                    r4 = (r4.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R3_X4:
                    r4 = (r4.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R4_X4:
                    r4 = (r4.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R5_X4:
                    r4 = (r4.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R6_X4:
                    r4 = (r4.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R7_X4:
                    r4 = (r4.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R0_X4:
                    r5 = (r5.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R1_X4:
                    r5 = (r5.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R2_X4:
                    r5 = (r5.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R3_X4:
                    r5 = (r5.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R4_X4:
                    r5 = (r5.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R5_X4:
                    r5 = (r5.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R6_X4:
                    r5 = (r5.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R7_X4:
                    r5 = (r5.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R0_X4:
                    r6 = (r6.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R1_X4:
                    r6 = (r6.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R2_X4:
                    r6 = (r6.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R3_X4:
                    r6 = (r6.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R4_X4:
                    r6 = (r6.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R5_X4:
                    r6 = (r6.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R6_X4:
                    r6 = (r6.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R7_X4:
                    r6 = (r6.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R0_X4:
                    r7 = (r7.AsInt32() - r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R1_X4:
                    r7 = (r7.AsInt32() - r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R2_X4:
                    r7 = (r7.AsInt32() - r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R3_X4:
                    r7 = (r7.AsInt32() - r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R4_X4:
                    r7 = (r7.AsInt32() - r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R5_X4:
                    r7 = (r7.AsInt32() - r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R6_X4:
                    r7 = (r7.AsInt32() - r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R7_X4:
                    r7 = (r7.AsInt32() - r7.AsInt32()).AsByte(); code++; goto Next;

                case OpCode2.MulI_R0_R0_X4:
                    r0 = (r0.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R1_X4:
                    r0 = (r0.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R2_X4:
                    r0 = (r0.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R3_X4:
                    r0 = (r0.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R4_X4:
                    r0 = (r0.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R5_X4:
                    r0 = (r0.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R6_X4:
                    r0 = (r0.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R7_X4:
                    r0 = (r0.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R0_X4:
                    r1 = (r1.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R1_X4:
                    r1 = (r1.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R2_X4:
                    r1 = (r1.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R3_X4:
                    r1 = (r1.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R4_X4:
                    r1 = (r1.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R5_X4:
                    r1 = (r1.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R6_X4:
                    r1 = (r1.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R7_X4:
                    r1 = (r1.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R0_X4:
                    r2 = (r2.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R1_X4:
                    r2 = (r2.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R2_X4:
                    r2 = (r2.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R3_X4:
                    r2 = (r2.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R4_X4:
                    r2 = (r2.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R5_X4:
                    r2 = (r2.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R6_X4:
                    r2 = (r2.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R7_X4:
                    r2 = (r2.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R0_X4:
                    r3 = (r3.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R1_X4:
                    r3 = (r3.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R2_X4:
                    r3 = (r3.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R3_X4:
                    r3 = (r3.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R4_X4:
                    r3 = (r3.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R5_X4:
                    r3 = (r3.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R6_X4:
                    r3 = (r3.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R7_X4:
                    r3 = (r3.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R0_X4:
                    r4 = (r4.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R1_X4:
                    r4 = (r4.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R2_X4:
                    r4 = (r4.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R3_X4:
                    r4 = (r4.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R4_X4:
                    r4 = (r4.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R5_X4:
                    r4 = (r4.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R6_X4:
                    r4 = (r4.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R7_X4:
                    r4 = (r4.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R0_X4:
                    r5 = (r5.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R1_X4:
                    r5 = (r5.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R2_X4:
                    r5 = (r5.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R3_X4:
                    r5 = (r5.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R4_X4:
                    r5 = (r5.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R5_X4:
                    r5 = (r5.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R6_X4:
                    r5 = (r5.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R7_X4:
                    r5 = (r5.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R0_X4:
                    r6 = (r6.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R1_X4:
                    r6 = (r6.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R2_X4:
                    r6 = (r6.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R3_X4:
                    r6 = (r6.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R4_X4:
                    r6 = (r6.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R5_X4:
                    r6 = (r6.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R6_X4:
                    r6 = (r6.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R7_X4:
                    r6 = (r6.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R0_X4:
                    r7 = (r7.AsInt32() * r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R1_X4:
                    r7 = (r7.AsInt32() * r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R2_X4:
                    r7 = (r7.AsInt32() * r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R3_X4:
                    r7 = (r7.AsInt32() * r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R4_X4:
                    r7 = (r7.AsInt32() * r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R5_X4:
                    r7 = (r7.AsInt32() * r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R6_X4:
                    r7 = (r7.AsInt32() * r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R7_X4:
                    r7 = (r7.AsInt32() * r7.AsInt32()).AsByte(); code++; goto Next;

                case OpCode2.DivI_R0_R0_X4:
                    r0 = (r0.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R1_X4:
                    r0 = (r0.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R2_X4:
                    r0 = (r0.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R3_X4:
                    r0 = (r0.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R4_X4:
                    r0 = (r0.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R5_X4:
                    r0 = (r0.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R6_X4:
                    r0 = (r0.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R7_X4:
                    r0 = (r0.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R0_X4:
                    r1 = (r1.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R1_X4:
                    r1 = (r1.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R2_X4:
                    r1 = (r1.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R3_X4:
                    r1 = (r1.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R4_X4:
                    r1 = (r1.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R5_X4:
                    r1 = (r1.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R6_X4:
                    r1 = (r1.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R7_X4:
                    r1 = (r1.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R0_X4:
                    r2 = (r2.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R1_X4:
                    r2 = (r2.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R2_X4:
                    r2 = (r2.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R3_X4:
                    r2 = (r2.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R4_X4:
                    r2 = (r2.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R5_X4:
                    r2 = (r2.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R6_X4:
                    r2 = (r2.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R7_X4:
                    r2 = (r2.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R0_X4:
                    r3 = (r3.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R1_X4:
                    r3 = (r3.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R2_X4:
                    r3 = (r3.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R3_X4:
                    r3 = (r3.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R4_X4:
                    r3 = (r3.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R5_X4:
                    r3 = (r3.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R6_X4:
                    r3 = (r3.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R7_X4:
                    r3 = (r3.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R0_X4:
                    r4 = (r4.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R1_X4:
                    r4 = (r4.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R2_X4:
                    r4 = (r4.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R3_X4:
                    r4 = (r4.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R4_X4:
                    r4 = (r4.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R5_X4:
                    r4 = (r4.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R6_X4:
                    r4 = (r4.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R7_X4:
                    r4 = (r4.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R0_X4:
                    r5 = (r5.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R1_X4:
                    r5 = (r5.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R2_X4:
                    r5 = (r5.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R3_X4:
                    r5 = (r5.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R4_X4:
                    r5 = (r5.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R5_X4:
                    r5 = (r5.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R6_X4:
                    r5 = (r5.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R7_X4:
                    r5 = (r5.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R0_X4:
                    r6 = (r6.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R1_X4:
                    r6 = (r6.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R2_X4:
                    r6 = (r6.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R3_X4:
                    r6 = (r6.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R4_X4:
                    r6 = (r6.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R5_X4:
                    r6 = (r6.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R6_X4:
                    r6 = (r6.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R7_X4:
                    r6 = (r6.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R0_X4:
                    r7 = (r7.AsInt32() / r0.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R1_X4:
                    r7 = (r7.AsInt32() / r1.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R2_X4:
                    r7 = (r7.AsInt32() / r2.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R3_X4:
                    r7 = (r7.AsInt32() / r3.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R4_X4:
                    r7 = (r7.AsInt32() / r4.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R5_X4:
                    r7 = (r7.AsInt32() / r5.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R6_X4:
                    r7 = (r7.AsInt32() / r6.AsInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R7_X4:
                    r7 = (r7.AsInt32() / r7.AsInt32()).AsByte(); code++; goto Next;

                case OpCode2.AddI_R0_R0_X8:
                    r0 = (r0.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R1_X8:
                    r0 = (r0.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R2_X8:
                    r0 = (r0.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R3_X8:
                    r0 = (r0.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R4_X8:
                    r0 = (r0.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R5_X8:
                    r0 = (r0.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R6_X8:
                    r0 = (r0.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R0_R7_X8:
                    r0 = (r0.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R0_X8:
                    r1 = (r1.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R1_X8:
                    r1 = (r1.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R2_X8:
                    r1 = (r1.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R3_X8:
                    r1 = (r1.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R4_X8:
                    r1 = (r1.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R5_X8:
                    r1 = (r1.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R6_X8:
                    r1 = (r1.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R1_R7_X8:
                    r1 = (r1.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R0_X8:
                    r2 = (r2.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R1_X8:
                    r2 = (r2.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R2_X8:
                    r2 = (r2.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R3_X8:
                    r2 = (r2.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R4_X8:
                    r2 = (r2.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R5_X8:
                    r2 = (r2.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R6_X8:
                    r2 = (r2.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R2_R7_X8:
                    r2 = (r2.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R0_X8:
                    r3 = (r3.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R1_X8:
                    r3 = (r3.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R2_X8:
                    r3 = (r3.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R3_X8:
                    r3 = (r3.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R4_X8:
                    r3 = (r3.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R5_X8:
                    r3 = (r3.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R6_X8:
                    r3 = (r3.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R3_R7_X8:
                    r3 = (r3.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R0_X8:
                    r4 = (r4.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R1_X8:
                    r4 = (r4.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R2_X8:
                    r4 = (r4.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R3_X8:
                    r4 = (r4.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R4_X8:
                    r4 = (r4.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R5_X8:
                    r4 = (r4.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R6_X8:
                    r4 = (r4.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R4_R7_X8:
                    r4 = (r4.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R0_X8:
                    r5 = (r5.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R1_X8:
                    r5 = (r5.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R2_X8:
                    r5 = (r5.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R3_X8:
                    r5 = (r5.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R4_X8:
                    r5 = (r5.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R5_X8:
                    r5 = (r5.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R6_X8:
                    r5 = (r5.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R5_R7_X8:
                    r5 = (r5.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R0_X8:
                    r6 = (r6.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R1_X8:
                    r6 = (r6.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R2_X8:
                    r6 = (r6.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R3_X8:
                    r6 = (r6.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R4_X8:
                    r6 = (r6.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R5_X8:
                    r6 = (r6.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R6_X8:
                    r6 = (r6.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R6_R7_X8:
                    r6 = (r6.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R0_X8:
                    r7 = (r7.AsInt64() + r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R1_X8:
                    r7 = (r7.AsInt64() + r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R2_X8:
                    r7 = (r7.AsInt64() + r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R3_X8:
                    r7 = (r7.AsInt64() + r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R4_X8:
                    r7 = (r7.AsInt64() + r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R5_X8:
                    r7 = (r7.AsInt64() + r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R6_X8:
                    r7 = (r7.AsInt64() + r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddI_R7_R7_X8:
                    r7 = (r7.AsInt64() + r7.AsInt64()).AsByte(); code++; goto Next;

                case OpCode2.SubI_R0_R0_X8:
                    r0 = (r0.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R1_X8:
                    r0 = (r0.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R2_X8:
                    r0 = (r0.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R3_X8:
                    r0 = (r0.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R4_X8:
                    r0 = (r0.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R5_X8:
                    r0 = (r0.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R6_X8:
                    r0 = (r0.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R0_R7_X8:
                    r0 = (r0.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R0_X8:
                    r1 = (r1.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R1_X8:
                    r1 = (r1.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R2_X8:
                    r1 = (r1.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R3_X8:
                    r1 = (r1.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R4_X8:
                    r1 = (r1.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R5_X8:
                    r1 = (r1.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R6_X8:
                    r1 = (r1.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R1_R7_X8:
                    r1 = (r1.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R0_X8:
                    r2 = (r2.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R1_X8:
                    r2 = (r2.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R2_X8:
                    r2 = (r2.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R3_X8:
                    r2 = (r2.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R4_X8:
                    r2 = (r2.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R5_X8:
                    r2 = (r2.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R6_X8:
                    r2 = (r2.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R2_R7_X8:
                    r2 = (r2.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R0_X8:
                    r3 = (r3.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R1_X8:
                    r3 = (r3.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R2_X8:
                    r3 = (r3.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R3_X8:
                    r3 = (r3.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R4_X8:
                    r3 = (r3.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R5_X8:
                    r3 = (r3.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R6_X8:
                    r3 = (r3.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R3_R7_X8:
                    r3 = (r3.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R0_X8:
                    r4 = (r4.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R1_X8:
                    r4 = (r4.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R2_X8:
                    r4 = (r4.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R3_X8:
                    r4 = (r4.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R4_X8:
                    r4 = (r4.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R5_X8:
                    r4 = (r4.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R6_X8:
                    r4 = (r4.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R4_R7_X8:
                    r4 = (r4.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R0_X8:
                    r5 = (r5.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R1_X8:
                    r5 = (r5.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R2_X8:
                    r5 = (r5.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R3_X8:
                    r5 = (r5.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R4_X8:
                    r5 = (r5.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R5_X8:
                    r5 = (r5.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R6_X8:
                    r5 = (r5.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R5_R7_X8:
                    r5 = (r5.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R0_X8:
                    r6 = (r6.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R1_X8:
                    r6 = (r6.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R2_X8:
                    r6 = (r6.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R3_X8:
                    r6 = (r6.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R4_X8:
                    r6 = (r6.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R5_X8:
                    r6 = (r6.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R6_X8:
                    r6 = (r6.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R6_R7_X8:
                    r6 = (r6.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R0_X8:
                    r7 = (r7.AsInt64() - r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R1_X8:
                    r7 = (r7.AsInt64() - r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R2_X8:
                    r7 = (r7.AsInt64() - r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R3_X8:
                    r7 = (r7.AsInt64() - r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R4_X8:
                    r7 = (r7.AsInt64() - r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R5_X8:
                    r7 = (r7.AsInt64() - r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R6_X8:
                    r7 = (r7.AsInt64() - r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubI_R7_R7_X8:
                    r7 = (r7.AsInt64() - r7.AsInt64()).AsByte(); code++; goto Next;

                case OpCode2.MulI_R0_R0_X8:
                    r0 = (r0.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R1_X8:
                    r0 = (r0.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R2_X8:
                    r0 = (r0.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R3_X8:
                    r0 = (r0.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R4_X8:
                    r0 = (r0.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R5_X8:
                    r0 = (r0.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R6_X8:
                    r0 = (r0.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R0_R7_X8:
                    r0 = (r0.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R0_X8:
                    r1 = (r1.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R1_X8:
                    r1 = (r1.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R2_X8:
                    r1 = (r1.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R3_X8:
                    r1 = (r1.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R4_X8:
                    r1 = (r1.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R5_X8:
                    r1 = (r1.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R6_X8:
                    r1 = (r1.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R1_R7_X8:
                    r1 = (r1.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R0_X8:
                    r2 = (r2.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R1_X8:
                    r2 = (r2.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R2_X8:
                    r2 = (r2.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R3_X8:
                    r2 = (r2.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R4_X8:
                    r2 = (r2.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R5_X8:
                    r2 = (r2.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R6_X8:
                    r2 = (r2.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R2_R7_X8:
                    r2 = (r2.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R0_X8:
                    r3 = (r3.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R1_X8:
                    r3 = (r3.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R2_X8:
                    r3 = (r3.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R3_X8:
                    r3 = (r3.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R4_X8:
                    r3 = (r3.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R5_X8:
                    r3 = (r3.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R6_X8:
                    r3 = (r3.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R3_R7_X8:
                    r3 = (r3.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R0_X8:
                    r4 = (r4.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R1_X8:
                    r4 = (r4.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R2_X8:
                    r4 = (r4.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R3_X8:
                    r4 = (r4.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R4_X8:
                    r4 = (r4.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R5_X8:
                    r4 = (r4.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R6_X8:
                    r4 = (r4.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R4_R7_X8:
                    r4 = (r4.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R0_X8:
                    r5 = (r5.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R1_X8:
                    r5 = (r5.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R2_X8:
                    r5 = (r5.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R3_X8:
                    r5 = (r5.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R4_X8:
                    r5 = (r5.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R5_X8:
                    r5 = (r5.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R6_X8:
                    r5 = (r5.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R5_R7_X8:
                    r5 = (r5.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R0_X8:
                    r6 = (r6.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R1_X8:
                    r6 = (r6.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R2_X8:
                    r6 = (r6.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R3_X8:
                    r6 = (r6.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R4_X8:
                    r6 = (r6.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R5_X8:
                    r6 = (r6.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R6_X8:
                    r6 = (r6.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R6_R7_X8:
                    r6 = (r6.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R0_X8:
                    r7 = (r7.AsInt64() * r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R1_X8:
                    r7 = (r7.AsInt64() * r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R2_X8:
                    r7 = (r7.AsInt64() * r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R3_X8:
                    r7 = (r7.AsInt64() * r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R4_X8:
                    r7 = (r7.AsInt64() * r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R5_X8:
                    r7 = (r7.AsInt64() * r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R6_X8:
                    r7 = (r7.AsInt64() * r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulI_R7_R7_X8:
                    r7 = (r7.AsInt64() * r7.AsInt64()).AsByte(); code++; goto Next;

                case OpCode2.DivI_R0_R0_X8:
                    r0 = (r0.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R1_X8:
                    r0 = (r0.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R2_X8:
                    r0 = (r0.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R3_X8:
                    r0 = (r0.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R4_X8:
                    r0 = (r0.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R5_X8:
                    r0 = (r0.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R6_X8:
                    r0 = (r0.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R0_R7_X8:
                    r0 = (r0.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R0_X8:
                    r1 = (r1.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R1_X8:
                    r1 = (r1.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R2_X8:
                    r1 = (r1.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R3_X8:
                    r1 = (r1.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R4_X8:
                    r1 = (r1.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R5_X8:
                    r1 = (r1.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R6_X8:
                    r1 = (r1.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R1_R7_X8:
                    r1 = (r1.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R0_X8:
                    r2 = (r2.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R1_X8:
                    r2 = (r2.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R2_X8:
                    r2 = (r2.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R3_X8:
                    r2 = (r2.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R4_X8:
                    r2 = (r2.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R5_X8:
                    r2 = (r2.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R6_X8:
                    r2 = (r2.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R2_R7_X8:
                    r2 = (r2.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R0_X8:
                    r3 = (r3.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R1_X8:
                    r3 = (r3.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R2_X8:
                    r3 = (r3.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R3_X8:
                    r3 = (r3.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R4_X8:
                    r3 = (r3.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R5_X8:
                    r3 = (r3.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R6_X8:
                    r3 = (r3.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R3_R7_X8:
                    r3 = (r3.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R0_X8:
                    r4 = (r4.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R1_X8:
                    r4 = (r4.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R2_X8:
                    r4 = (r4.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R3_X8:
                    r4 = (r4.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R4_X8:
                    r4 = (r4.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R5_X8:
                    r4 = (r4.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R6_X8:
                    r4 = (r4.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R4_R7_X8:
                    r4 = (r4.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R0_X8:
                    r5 = (r5.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R1_X8:
                    r5 = (r5.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R2_X8:
                    r5 = (r5.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R3_X8:
                    r5 = (r5.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R4_X8:
                    r5 = (r5.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R5_X8:
                    r5 = (r5.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R6_X8:
                    r5 = (r5.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R5_R7_X8:
                    r5 = (r5.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R0_X8:
                    r6 = (r6.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R1_X8:
                    r6 = (r6.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R2_X8:
                    r6 = (r6.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R3_X8:
                    r6 = (r6.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R4_X8:
                    r6 = (r6.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R5_X8:
                    r6 = (r6.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R6_X8:
                    r6 = (r6.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R6_R7_X8:
                    r6 = (r6.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R0_X8:
                    r7 = (r7.AsInt64() / r0.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R1_X8:
                    r7 = (r7.AsInt64() / r1.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R2_X8:
                    r7 = (r7.AsInt64() / r2.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R3_X8:
                    r7 = (r7.AsInt64() / r3.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R4_X8:
                    r7 = (r7.AsInt64() / r4.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R5_X8:
                    r7 = (r7.AsInt64() / r5.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R6_X8:
                    r7 = (r7.AsInt64() / r6.AsInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivI_R7_R7_X8:
                    r7 = (r7.AsInt64() / r7.AsInt64()).AsByte(); code++; goto Next;

                case OpCode2.AddU_R0_R0_X1:
                    r0 = (r0 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R1_X1:
                    r0 = (r0 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R2_X1:
                    r0 = (r0 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R3_X1:
                    r0 = (r0 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R4_X1:
                    r0 = (r0 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R5_X1:
                    r0 = (r0 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R6_X1:
                    r0 = (r0 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R7_X1:
                    r0 = (r0 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R0_X1:
                    r1 = (r1 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R1_X1:
                    r1 = (r1 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R2_X1:
                    r1 = (r1 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R3_X1:
                    r1 = (r1 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R4_X1:
                    r1 = (r1 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R5_X1:
                    r1 = (r1 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R6_X1:
                    r1 = (r1 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R7_X1:
                    r1 = (r1 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R0_X1:
                    r2 = (r2 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R1_X1:
                    r2 = (r2 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R2_X1:
                    r2 = (r2 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R3_X1:
                    r2 = (r2 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R4_X1:
                    r2 = (r2 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R5_X1:
                    r2 = (r2 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R6_X1:
                    r2 = (r2 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R7_X1:
                    r2 = (r2 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R0_X1:
                    r3 = (r3 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R1_X1:
                    r3 = (r3 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R2_X1:
                    r3 = (r3 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R3_X1:
                    r3 = (r3 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R4_X1:
                    r3 = (r3 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R5_X1:
                    r3 = (r3 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R6_X1:
                    r3 = (r3 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R7_X1:
                    r3 = (r3 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R0_X1:
                    r4 = (r4 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R1_X1:
                    r4 = (r4 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R2_X1:
                    r4 = (r4 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R3_X1:
                    r4 = (r4 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R4_X1:
                    r4 = (r4 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R5_X1:
                    r4 = (r4 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R6_X1:
                    r4 = (r4 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R7_X1:
                    r4 = (r4 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R0_X1:
                    r5 = (r5 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R1_X1:
                    r5 = (r5 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R2_X1:
                    r5 = (r5 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R3_X1:
                    r5 = (r5 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R4_X1:
                    r5 = (r5 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R5_X1:
                    r5 = (r5 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R6_X1:
                    r5 = (r5 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R7_X1:
                    r5 = (r5 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R0_X1:
                    r6 = (r6 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R1_X1:
                    r6 = (r6 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R2_X1:
                    r6 = (r6 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R3_X1:
                    r6 = (r6 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R4_X1:
                    r6 = (r6 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R5_X1:
                    r6 = (r6 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R6_X1:
                    r6 = (r6 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R7_X1:
                    r6 = (r6 + r7).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R0_X1:
                    r7 = (r7 + r0).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R1_X1:
                    r7 = (r7 + r1).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R2_X1:
                    r7 = (r7 + r2).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R3_X1:
                    r7 = (r7 + r3).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R4_X1:
                    r7 = (r7 + r4).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R5_X1:
                    r7 = (r7 + r5).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R6_X1:
                    r7 = (r7 + r6).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R7_X1:
                    r7 = (r7 + r7).AsByte(); code++; goto Next;

                case OpCode2.SubU_R0_R0_X1:
                    r0 = (r0 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R1_X1:
                    r0 = (r0 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R2_X1:
                    r0 = (r0 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R3_X1:
                    r0 = (r0 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R4_X1:
                    r0 = (r0 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R5_X1:
                    r0 = (r0 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R6_X1:
                    r0 = (r0 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R7_X1:
                    r0 = (r0 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R0_X1:
                    r1 = (r1 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R1_X1:
                    r1 = (r1 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R2_X1:
                    r1 = (r1 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R3_X1:
                    r1 = (r1 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R4_X1:
                    r1 = (r1 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R5_X1:
                    r1 = (r1 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R6_X1:
                    r1 = (r1 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R7_X1:
                    r1 = (r1 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R0_X1:
                    r2 = (r2 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R1_X1:
                    r2 = (r2 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R2_X1:
                    r2 = (r2 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R3_X1:
                    r2 = (r2 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R4_X1:
                    r2 = (r2 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R5_X1:
                    r2 = (r2 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R6_X1:
                    r2 = (r2 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R7_X1:
                    r2 = (r2 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R0_X1:
                    r3 = (r3 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R1_X1:
                    r3 = (r3 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R2_X1:
                    r3 = (r3 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R3_X1:
                    r3 = (r3 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R4_X1:
                    r3 = (r3 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R5_X1:
                    r3 = (r3 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R6_X1:
                    r3 = (r3 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R7_X1:
                    r3 = (r3 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R0_X1:
                    r4 = (r4 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R1_X1:
                    r4 = (r4 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R2_X1:
                    r4 = (r4 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R3_X1:
                    r4 = (r4 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R4_X1:
                    r4 = (r4 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R5_X1:
                    r4 = (r4 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R6_X1:
                    r4 = (r4 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R7_X1:
                    r4 = (r4 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R0_X1:
                    r5 = (r5 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R1_X1:
                    r5 = (r5 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R2_X1:
                    r5 = (r5 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R3_X1:
                    r5 = (r5 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R4_X1:
                    r5 = (r5 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R5_X1:
                    r5 = (r5 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R6_X1:
                    r5 = (r5 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R7_X1:
                    r5 = (r5 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R0_X1:
                    r6 = (r6 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R1_X1:
                    r6 = (r6 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R2_X1:
                    r6 = (r6 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R3_X1:
                    r6 = (r6 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R4_X1:
                    r6 = (r6 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R5_X1:
                    r6 = (r6 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R6_X1:
                    r6 = (r6 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R7_X1:
                    r6 = (r6 - r7).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R0_X1:
                    r7 = (r7 - r0).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R1_X1:
                    r7 = (r7 - r1).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R2_X1:
                    r7 = (r7 - r2).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R3_X1:
                    r7 = (r7 - r3).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R4_X1:
                    r7 = (r7 - r4).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R5_X1:
                    r7 = (r7 - r5).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R6_X1:
                    r7 = (r7 - r6).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R7_X1:
                    r7 = (r7 - r7).AsByte(); code++; goto Next;

                case OpCode2.MulU_R0_R0_X1:
                    r0 = (r0 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R1_X1:
                    r0 = (r0 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R2_X1:
                    r0 = (r0 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R3_X1:
                    r0 = (r0 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R4_X1:
                    r0 = (r0 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R5_X1:
                    r0 = (r0 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R6_X1:
                    r0 = (r0 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R7_X1:
                    r0 = (r0 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R0_X1:
                    r1 = (r1 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R1_X1:
                    r1 = (r1 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R2_X1:
                    r1 = (r1 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R3_X1:
                    r1 = (r1 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R4_X1:
                    r1 = (r1 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R5_X1:
                    r1 = (r1 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R6_X1:
                    r1 = (r1 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R7_X1:
                    r1 = (r1 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R0_X1:
                    r2 = (r2 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R1_X1:
                    r2 = (r2 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R2_X1:
                    r2 = (r2 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R3_X1:
                    r2 = (r2 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R4_X1:
                    r2 = (r2 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R5_X1:
                    r2 = (r2 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R6_X1:
                    r2 = (r2 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R7_X1:
                    r2 = (r2 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R0_X1:
                    r3 = (r3 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R1_X1:
                    r3 = (r3 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R2_X1:
                    r3 = (r3 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R3_X1:
                    r3 = (r3 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R4_X1:
                    r3 = (r3 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R5_X1:
                    r3 = (r3 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R6_X1:
                    r3 = (r3 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R7_X1:
                    r3 = (r3 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R0_X1:
                    r4 = (r4 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R1_X1:
                    r4 = (r4 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R2_X1:
                    r4 = (r4 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R3_X1:
                    r4 = (r4 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R4_X1:
                    r4 = (r4 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R5_X1:
                    r4 = (r4 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R6_X1:
                    r4 = (r4 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R7_X1:
                    r4 = (r4 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R0_X1:
                    r5 = (r5 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R1_X1:
                    r5 = (r5 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R2_X1:
                    r5 = (r5 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R3_X1:
                    r5 = (r5 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R4_X1:
                    r5 = (r5 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R5_X1:
                    r5 = (r5 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R6_X1:
                    r5 = (r5 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R7_X1:
                    r5 = (r5 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R0_X1:
                    r6 = (r6 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R1_X1:
                    r6 = (r6 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R2_X1:
                    r6 = (r6 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R3_X1:
                    r6 = (r6 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R4_X1:
                    r6 = (r6 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R5_X1:
                    r6 = (r6 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R6_X1:
                    r6 = (r6 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R7_X1:
                    r6 = (r6 * r7).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R0_X1:
                    r7 = (r7 * r0).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R1_X1:
                    r7 = (r7 * r1).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R2_X1:
                    r7 = (r7 * r2).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R3_X1:
                    r7 = (r7 * r3).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R4_X1:
                    r7 = (r7 * r4).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R5_X1:
                    r7 = (r7 * r5).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R6_X1:
                    r7 = (r7 * r6).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R7_X1:
                    r7 = (r7 * r7).AsByte(); code++; goto Next;

                case OpCode2.DivU_R0_R0_X1:
                    r0 = (r0 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R1_X1:
                    r0 = (r0 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R2_X1:
                    r0 = (r0 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R3_X1:
                    r0 = (r0 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R4_X1:
                    r0 = (r0 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R5_X1:
                    r0 = (r0 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R6_X1:
                    r0 = (r0 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R7_X1:
                    r0 = (r0 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R0_X1:
                    r1 = (r1 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R1_X1:
                    r1 = (r1 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R2_X1:
                    r1 = (r1 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R3_X1:
                    r1 = (r1 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R4_X1:
                    r1 = (r1 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R5_X1:
                    r1 = (r1 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R6_X1:
                    r1 = (r1 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R7_X1:
                    r1 = (r1 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R0_X1:
                    r2 = (r2 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R1_X1:
                    r2 = (r2 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R2_X1:
                    r2 = (r2 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R3_X1:
                    r2 = (r2 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R4_X1:
                    r2 = (r2 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R5_X1:
                    r2 = (r2 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R6_X1:
                    r2 = (r2 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R7_X1:
                    r2 = (r2 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R0_X1:
                    r3 = (r3 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R1_X1:
                    r3 = (r3 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R2_X1:
                    r3 = (r3 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R3_X1:
                    r3 = (r3 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R4_X1:
                    r3 = (r3 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R5_X1:
                    r3 = (r3 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R6_X1:
                    r3 = (r3 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R7_X1:
                    r3 = (r3 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R0_X1:
                    r4 = (r4 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R1_X1:
                    r4 = (r4 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R2_X1:
                    r4 = (r4 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R3_X1:
                    r4 = (r4 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R4_X1:
                    r4 = (r4 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R5_X1:
                    r4 = (r4 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R6_X1:
                    r4 = (r4 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R7_X1:
                    r4 = (r4 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R0_X1:
                    r5 = (r5 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R1_X1:
                    r5 = (r5 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R2_X1:
                    r5 = (r5 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R3_X1:
                    r5 = (r5 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R4_X1:
                    r5 = (r5 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R5_X1:
                    r5 = (r5 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R6_X1:
                    r5 = (r5 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R7_X1:
                    r5 = (r5 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R0_X1:
                    r6 = (r6 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R1_X1:
                    r6 = (r6 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R2_X1:
                    r6 = (r6 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R3_X1:
                    r6 = (r6 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R4_X1:
                    r6 = (r6 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R5_X1:
                    r6 = (r6 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R6_X1:
                    r6 = (r6 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R7_X1:
                    r6 = (r6 / r7).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R0_X1:
                    r7 = (r7 / r0).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R1_X1:
                    r7 = (r7 / r1).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R2_X1:
                    r7 = (r7 / r2).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R3_X1:
                    r7 = (r7 / r3).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R4_X1:
                    r7 = (r7 / r4).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R5_X1:
                    r7 = (r7 / r5).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R6_X1:
                    r7 = (r7 / r6).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R7_X1:
                    r7 = (r7 / r7).AsByte(); code++; goto Next;

                case OpCode2.AddU_R0_R0_X2:
                    r0 = (r0.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R1_X2:
                    r0 = (r0.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R2_X2:
                    r0 = (r0.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R3_X2:
                    r0 = (r0.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R4_X2:
                    r0 = (r0.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R5_X2:
                    r0 = (r0.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R6_X2:
                    r0 = (r0.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R7_X2:
                    r0 = (r0.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R0_X2:
                    r1 = (r1.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R1_X2:
                    r1 = (r1.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R2_X2:
                    r1 = (r1.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R3_X2:
                    r1 = (r1.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R4_X2:
                    r1 = (r1.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R5_X2:
                    r1 = (r1.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R6_X2:
                    r1 = (r1.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R7_X2:
                    r1 = (r1.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R0_X2:
                    r2 = (r2.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R1_X2:
                    r2 = (r2.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R2_X2:
                    r2 = (r2.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R3_X2:
                    r2 = (r2.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R4_X2:
                    r2 = (r2.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R5_X2:
                    r2 = (r2.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R6_X2:
                    r2 = (r2.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R7_X2:
                    r2 = (r2.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R0_X2:
                    r3 = (r3.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R1_X2:
                    r3 = (r3.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R2_X2:
                    r3 = (r3.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R3_X2:
                    r3 = (r3.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R4_X2:
                    r3 = (r3.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R5_X2:
                    r3 = (r3.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R6_X2:
                    r3 = (r3.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R7_X2:
                    r3 = (r3.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R0_X2:
                    r4 = (r4.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R1_X2:
                    r4 = (r4.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R2_X2:
                    r4 = (r4.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R3_X2:
                    r4 = (r4.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R4_X2:
                    r4 = (r4.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R5_X2:
                    r4 = (r4.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R6_X2:
                    r4 = (r4.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R7_X2:
                    r4 = (r4.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R0_X2:
                    r5 = (r5.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R1_X2:
                    r5 = (r5.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R2_X2:
                    r5 = (r5.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R3_X2:
                    r5 = (r5.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R4_X2:
                    r5 = (r5.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R5_X2:
                    r5 = (r5.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R6_X2:
                    r5 = (r5.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R7_X2:
                    r5 = (r5.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R0_X2:
                    r6 = (r6.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R1_X2:
                    r6 = (r6.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R2_X2:
                    r6 = (r6.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R3_X2:
                    r6 = (r6.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R4_X2:
                    r6 = (r6.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R5_X2:
                    r6 = (r6.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R6_X2:
                    r6 = (r6.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R7_X2:
                    r6 = (r6.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R0_X2:
                    r7 = (r7.AsUInt16() + r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R1_X2:
                    r7 = (r7.AsUInt16() + r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R2_X2:
                    r7 = (r7.AsUInt16() + r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R3_X2:
                    r7 = (r7.AsUInt16() + r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R4_X2:
                    r7 = (r7.AsUInt16() + r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R5_X2:
                    r7 = (r7.AsUInt16() + r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R6_X2:
                    r7 = (r7.AsUInt16() + r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R7_X2:
                    r7 = (r7.AsUInt16() + r7.AsUInt16()).AsByte(); code++; goto Next;

                case OpCode2.SubU_R0_R0_X2:
                    r0 = (r0.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R1_X2:
                    r0 = (r0.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R2_X2:
                    r0 = (r0.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R3_X2:
                    r0 = (r0.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R4_X2:
                    r0 = (r0.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R5_X2:
                    r0 = (r0.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R6_X2:
                    r0 = (r0.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R7_X2:
                    r0 = (r0.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R0_X2:
                    r1 = (r1.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R1_X2:
                    r1 = (r1.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R2_X2:
                    r1 = (r1.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R3_X2:
                    r1 = (r1.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R4_X2:
                    r1 = (r1.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R5_X2:
                    r1 = (r1.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R6_X2:
                    r1 = (r1.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R7_X2:
                    r1 = (r1.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R0_X2:
                    r2 = (r2.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R1_X2:
                    r2 = (r2.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R2_X2:
                    r2 = (r2.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R3_X2:
                    r2 = (r2.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R4_X2:
                    r2 = (r2.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R5_X2:
                    r2 = (r2.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R6_X2:
                    r2 = (r2.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R7_X2:
                    r2 = (r2.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R0_X2:
                    r3 = (r3.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R1_X2:
                    r3 = (r3.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R2_X2:
                    r3 = (r3.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R3_X2:
                    r3 = (r3.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R4_X2:
                    r3 = (r3.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R5_X2:
                    r3 = (r3.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R6_X2:
                    r3 = (r3.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R7_X2:
                    r3 = (r3.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R0_X2:
                    r4 = (r4.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R1_X2:
                    r4 = (r4.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R2_X2:
                    r4 = (r4.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R3_X2:
                    r4 = (r4.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R4_X2:
                    r4 = (r4.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R5_X2:
                    r4 = (r4.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R6_X2:
                    r4 = (r4.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R7_X2:
                    r4 = (r4.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R0_X2:
                    r5 = (r5.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R1_X2:
                    r5 = (r5.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R2_X2:
                    r5 = (r5.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R3_X2:
                    r5 = (r5.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R4_X2:
                    r5 = (r5.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R5_X2:
                    r5 = (r5.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R6_X2:
                    r5 = (r5.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R7_X2:
                    r5 = (r5.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R0_X2:
                    r6 = (r6.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R1_X2:
                    r6 = (r6.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R2_X2:
                    r6 = (r6.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R3_X2:
                    r6 = (r6.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R4_X2:
                    r6 = (r6.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R5_X2:
                    r6 = (r6.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R6_X2:
                    r6 = (r6.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R7_X2:
                    r6 = (r6.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R0_X2:
                    r7 = (r7.AsUInt16() - r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R1_X2:
                    r7 = (r7.AsUInt16() - r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R2_X2:
                    r7 = (r7.AsUInt16() - r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R3_X2:
                    r7 = (r7.AsUInt16() - r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R4_X2:
                    r7 = (r7.AsUInt16() - r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R5_X2:
                    r7 = (r7.AsUInt16() - r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R6_X2:
                    r7 = (r7.AsUInt16() - r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R7_X2:
                    r7 = (r7.AsUInt16() - r7.AsUInt16()).AsByte(); code++; goto Next;

                case OpCode2.MulU_R0_R0_X2:
                    r0 = (r0.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R1_X2:
                    r0 = (r0.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R2_X2:
                    r0 = (r0.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R3_X2:
                    r0 = (r0.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R4_X2:
                    r0 = (r0.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R5_X2:
                    r0 = (r0.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R6_X2:
                    r0 = (r0.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R7_X2:
                    r0 = (r0.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R0_X2:
                    r1 = (r1.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R1_X2:
                    r1 = (r1.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R2_X2:
                    r1 = (r1.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R3_X2:
                    r1 = (r1.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R4_X2:
                    r1 = (r1.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R5_X2:
                    r1 = (r1.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R6_X2:
                    r1 = (r1.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R7_X2:
                    r1 = (r1.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R0_X2:
                    r2 = (r2.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R1_X2:
                    r2 = (r2.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R2_X2:
                    r2 = (r2.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R3_X2:
                    r2 = (r2.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R4_X2:
                    r2 = (r2.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R5_X2:
                    r2 = (r2.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R6_X2:
                    r2 = (r2.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R7_X2:
                    r2 = (r2.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R0_X2:
                    r3 = (r3.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R1_X2:
                    r3 = (r3.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R2_X2:
                    r3 = (r3.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R3_X2:
                    r3 = (r3.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R4_X2:
                    r3 = (r3.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R5_X2:
                    r3 = (r3.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R6_X2:
                    r3 = (r3.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R7_X2:
                    r3 = (r3.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R0_X2:
                    r4 = (r4.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R1_X2:
                    r4 = (r4.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R2_X2:
                    r4 = (r4.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R3_X2:
                    r4 = (r4.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R4_X2:
                    r4 = (r4.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R5_X2:
                    r4 = (r4.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R6_X2:
                    r4 = (r4.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R7_X2:
                    r4 = (r4.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R0_X2:
                    r5 = (r5.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R1_X2:
                    r5 = (r5.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R2_X2:
                    r5 = (r5.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R3_X2:
                    r5 = (r5.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R4_X2:
                    r5 = (r5.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R5_X2:
                    r5 = (r5.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R6_X2:
                    r5 = (r5.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R7_X2:
                    r5 = (r5.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R0_X2:
                    r6 = (r6.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R1_X2:
                    r6 = (r6.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R2_X2:
                    r6 = (r6.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R3_X2:
                    r6 = (r6.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R4_X2:
                    r6 = (r6.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R5_X2:
                    r6 = (r6.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R6_X2:
                    r6 = (r6.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R7_X2:
                    r6 = (r6.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R0_X2:
                    r7 = (r7.AsUInt16() * r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R1_X2:
                    r7 = (r7.AsUInt16() * r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R2_X2:
                    r7 = (r7.AsUInt16() * r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R3_X2:
                    r7 = (r7.AsUInt16() * r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R4_X2:
                    r7 = (r7.AsUInt16() * r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R5_X2:
                    r7 = (r7.AsUInt16() * r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R6_X2:
                    r7 = (r7.AsUInt16() * r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R7_X2:
                    r7 = (r7.AsUInt16() * r7.AsUInt16()).AsByte(); code++; goto Next;

                case OpCode2.DivU_R0_R0_X2:
                    r0 = (r0.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R1_X2:
                    r0 = (r0.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R2_X2:
                    r0 = (r0.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R3_X2:
                    r0 = (r0.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R4_X2:
                    r0 = (r0.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R5_X2:
                    r0 = (r0.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R6_X2:
                    r0 = (r0.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R7_X2:
                    r0 = (r0.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R0_X2:
                    r1 = (r1.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R1_X2:
                    r1 = (r1.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R2_X2:
                    r1 = (r1.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R3_X2:
                    r1 = (r1.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R4_X2:
                    r1 = (r1.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R5_X2:
                    r1 = (r1.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R6_X2:
                    r1 = (r1.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R7_X2:
                    r1 = (r1.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R0_X2:
                    r2 = (r2.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R1_X2:
                    r2 = (r2.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R2_X2:
                    r2 = (r2.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R3_X2:
                    r2 = (r2.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R4_X2:
                    r2 = (r2.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R5_X2:
                    r2 = (r2.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R6_X2:
                    r2 = (r2.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R7_X2:
                    r2 = (r2.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R0_X2:
                    r3 = (r3.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R1_X2:
                    r3 = (r3.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R2_X2:
                    r3 = (r3.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R3_X2:
                    r3 = (r3.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R4_X2:
                    r3 = (r3.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R5_X2:
                    r3 = (r3.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R6_X2:
                    r3 = (r3.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R7_X2:
                    r3 = (r3.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R0_X2:
                    r4 = (r4.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R1_X2:
                    r4 = (r4.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R2_X2:
                    r4 = (r4.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R3_X2:
                    r4 = (r4.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R4_X2:
                    r4 = (r4.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R5_X2:
                    r4 = (r4.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R6_X2:
                    r4 = (r4.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R7_X2:
                    r4 = (r4.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R0_X2:
                    r5 = (r5.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R1_X2:
                    r5 = (r5.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R2_X2:
                    r5 = (r5.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R3_X2:
                    r5 = (r5.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R4_X2:
                    r5 = (r5.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R5_X2:
                    r5 = (r5.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R6_X2:
                    r5 = (r5.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R7_X2:
                    r5 = (r5.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R0_X2:
                    r6 = (r6.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R1_X2:
                    r6 = (r6.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R2_X2:
                    r6 = (r6.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R3_X2:
                    r6 = (r6.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R4_X2:
                    r6 = (r6.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R5_X2:
                    r6 = (r6.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R6_X2:
                    r6 = (r6.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R7_X2:
                    r6 = (r6.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R0_X2:
                    r7 = (r7.AsUInt16() / r0.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R1_X2:
                    r7 = (r7.AsUInt16() / r1.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R2_X2:
                    r7 = (r7.AsUInt16() / r2.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R3_X2:
                    r7 = (r7.AsUInt16() / r3.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R4_X2:
                    r7 = (r7.AsUInt16() / r4.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R5_X2:
                    r7 = (r7.AsUInt16() / r5.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R6_X2:
                    r7 = (r7.AsUInt16() / r6.AsUInt16()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R7_X2:
                    r7 = (r7.AsUInt16() / r7.AsUInt16()).AsByte(); code++; goto Next;

                case OpCode2.AddU_R0_R0_X4:
                    r0 = (r0.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R1_X4:
                    r0 = (r0.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R2_X4:
                    r0 = (r0.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R3_X4:
                    r0 = (r0.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R4_X4:
                    r0 = (r0.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R5_X4:
                    r0 = (r0.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R6_X4:
                    r0 = (r0.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R7_X4:
                    r0 = (r0.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R0_X4:
                    r1 = (r1.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R1_X4:
                    r1 = (r1.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R2_X4:
                    r1 = (r1.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R3_X4:
                    r1 = (r1.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R4_X4:
                    r1 = (r1.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R5_X4:
                    r1 = (r1.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R6_X4:
                    r1 = (r1.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R7_X4:
                    r1 = (r1.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R0_X4:
                    r2 = (r2.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R1_X4:
                    r2 = (r2.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R2_X4:
                    r2 = (r2.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R3_X4:
                    r2 = (r2.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R4_X4:
                    r2 = (r2.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R5_X4:
                    r2 = (r2.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R6_X4:
                    r2 = (r2.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R7_X4:
                    r2 = (r2.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R0_X4:
                    r3 = (r3.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R1_X4:
                    r3 = (r3.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R2_X4:
                    r3 = (r3.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R3_X4:
                    r3 = (r3.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R4_X4:
                    r3 = (r3.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R5_X4:
                    r3 = (r3.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R6_X4:
                    r3 = (r3.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R7_X4:
                    r3 = (r3.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R0_X4:
                    r4 = (r4.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R1_X4:
                    r4 = (r4.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R2_X4:
                    r4 = (r4.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R3_X4:
                    r4 = (r4.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R4_X4:
                    r4 = (r4.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R5_X4:
                    r4 = (r4.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R6_X4:
                    r4 = (r4.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R7_X4:
                    r4 = (r4.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R0_X4:
                    r5 = (r5.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R1_X4:
                    r5 = (r5.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R2_X4:
                    r5 = (r5.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R3_X4:
                    r5 = (r5.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R4_X4:
                    r5 = (r5.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R5_X4:
                    r5 = (r5.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R6_X4:
                    r5 = (r5.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R7_X4:
                    r5 = (r5.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R0_X4:
                    r6 = (r6.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R1_X4:
                    r6 = (r6.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R2_X4:
                    r6 = (r6.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R3_X4:
                    r6 = (r6.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R4_X4:
                    r6 = (r6.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R5_X4:
                    r6 = (r6.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R6_X4:
                    r6 = (r6.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R7_X4:
                    r6 = (r6.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R0_X4:
                    r7 = (r7.AsUInt32() + r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R1_X4:
                    r7 = (r7.AsUInt32() + r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R2_X4:
                    r7 = (r7.AsUInt32() + r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R3_X4:
                    r7 = (r7.AsUInt32() + r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R4_X4:
                    r7 = (r7.AsUInt32() + r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R5_X4:
                    r7 = (r7.AsUInt32() + r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R6_X4:
                    r7 = (r7.AsUInt32() + r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R7_X4:
                    r7 = (r7.AsUInt32() + r7.AsUInt32()).AsByte(); code++; goto Next;

                case OpCode2.SubU_R0_R0_X4:
                    r0 = (r0.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R1_X4:
                    r0 = (r0.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R2_X4:
                    r0 = (r0.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R3_X4:
                    r0 = (r0.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R4_X4:
                    r0 = (r0.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R5_X4:
                    r0 = (r0.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R6_X4:
                    r0 = (r0.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R7_X4:
                    r0 = (r0.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R0_X4:
                    r1 = (r1.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R1_X4:
                    r1 = (r1.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R2_X4:
                    r1 = (r1.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R3_X4:
                    r1 = (r1.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R4_X4:
                    r1 = (r1.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R5_X4:
                    r1 = (r1.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R6_X4:
                    r1 = (r1.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R7_X4:
                    r1 = (r1.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R0_X4:
                    r2 = (r2.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R1_X4:
                    r2 = (r2.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R2_X4:
                    r2 = (r2.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R3_X4:
                    r2 = (r2.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R4_X4:
                    r2 = (r2.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R5_X4:
                    r2 = (r2.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R6_X4:
                    r2 = (r2.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R7_X4:
                    r2 = (r2.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R0_X4:
                    r3 = (r3.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R1_X4:
                    r3 = (r3.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R2_X4:
                    r3 = (r3.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R3_X4:
                    r3 = (r3.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R4_X4:
                    r3 = (r3.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R5_X4:
                    r3 = (r3.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R6_X4:
                    r3 = (r3.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R7_X4:
                    r3 = (r3.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R0_X4:
                    r4 = (r4.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R1_X4:
                    r4 = (r4.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R2_X4:
                    r4 = (r4.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R3_X4:
                    r4 = (r4.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R4_X4:
                    r4 = (r4.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R5_X4:
                    r4 = (r4.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R6_X4:
                    r4 = (r4.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R7_X4:
                    r4 = (r4.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R0_X4:
                    r5 = (r5.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R1_X4:
                    r5 = (r5.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R2_X4:
                    r5 = (r5.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R3_X4:
                    r5 = (r5.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R4_X4:
                    r5 = (r5.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R5_X4:
                    r5 = (r5.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R6_X4:
                    r5 = (r5.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R7_X4:
                    r5 = (r5.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R0_X4:
                    r6 = (r6.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R1_X4:
                    r6 = (r6.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R2_X4:
                    r6 = (r6.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R3_X4:
                    r6 = (r6.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R4_X4:
                    r6 = (r6.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R5_X4:
                    r6 = (r6.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R6_X4:
                    r6 = (r6.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R7_X4:
                    r6 = (r6.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R0_X4:
                    r7 = (r7.AsUInt32() - r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R1_X4:
                    r7 = (r7.AsUInt32() - r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R2_X4:
                    r7 = (r7.AsUInt32() - r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R3_X4:
                    r7 = (r7.AsUInt32() - r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R4_X4:
                    r7 = (r7.AsUInt32() - r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R5_X4:
                    r7 = (r7.AsUInt32() - r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R6_X4:
                    r7 = (r7.AsUInt32() - r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R7_X4:
                    r7 = (r7.AsUInt32() - r7.AsUInt32()).AsByte(); code++; goto Next;

                case OpCode2.MulU_R0_R0_X4:
                    r0 = (r0.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R1_X4:
                    r0 = (r0.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R2_X4:
                    r0 = (r0.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R3_X4:
                    r0 = (r0.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R4_X4:
                    r0 = (r0.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R5_X4:
                    r0 = (r0.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R6_X4:
                    r0 = (r0.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R7_X4:
                    r0 = (r0.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R0_X4:
                    r1 = (r1.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R1_X4:
                    r1 = (r1.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R2_X4:
                    r1 = (r1.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R3_X4:
                    r1 = (r1.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R4_X4:
                    r1 = (r1.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R5_X4:
                    r1 = (r1.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R6_X4:
                    r1 = (r1.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R7_X4:
                    r1 = (r1.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R0_X4:
                    r2 = (r2.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R1_X4:
                    r2 = (r2.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R2_X4:
                    r2 = (r2.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R3_X4:
                    r2 = (r2.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R4_X4:
                    r2 = (r2.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R5_X4:
                    r2 = (r2.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R6_X4:
                    r2 = (r2.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R7_X4:
                    r2 = (r2.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R0_X4:
                    r3 = (r3.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R1_X4:
                    r3 = (r3.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R2_X4:
                    r3 = (r3.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R3_X4:
                    r3 = (r3.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R4_X4:
                    r3 = (r3.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R5_X4:
                    r3 = (r3.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R6_X4:
                    r3 = (r3.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R7_X4:
                    r3 = (r3.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R0_X4:
                    r4 = (r4.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R1_X4:
                    r4 = (r4.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R2_X4:
                    r4 = (r4.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R3_X4:
                    r4 = (r4.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R4_X4:
                    r4 = (r4.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R5_X4:
                    r4 = (r4.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R6_X4:
                    r4 = (r4.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R7_X4:
                    r4 = (r4.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R0_X4:
                    r5 = (r5.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R1_X4:
                    r5 = (r5.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R2_X4:
                    r5 = (r5.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R3_X4:
                    r5 = (r5.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R4_X4:
                    r5 = (r5.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R5_X4:
                    r5 = (r5.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R6_X4:
                    r5 = (r5.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R7_X4:
                    r5 = (r5.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R0_X4:
                    r6 = (r6.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R1_X4:
                    r6 = (r6.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R2_X4:
                    r6 = (r6.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R3_X4:
                    r6 = (r6.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R4_X4:
                    r6 = (r6.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R5_X4:
                    r6 = (r6.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R6_X4:
                    r6 = (r6.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R7_X4:
                    r6 = (r6.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R0_X4:
                    r7 = (r7.AsUInt32() * r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R1_X4:
                    r7 = (r7.AsUInt32() * r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R2_X4:
                    r7 = (r7.AsUInt32() * r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R3_X4:
                    r7 = (r7.AsUInt32() * r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R4_X4:
                    r7 = (r7.AsUInt32() * r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R5_X4:
                    r7 = (r7.AsUInt32() * r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R6_X4:
                    r7 = (r7.AsUInt32() * r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R7_X4:
                    r7 = (r7.AsUInt32() * r7.AsUInt32()).AsByte(); code++; goto Next;

                case OpCode2.DivU_R0_R0_X4:
                    r0 = (r0.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R1_X4:
                    r0 = (r0.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R2_X4:
                    r0 = (r0.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R3_X4:
                    r0 = (r0.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R4_X4:
                    r0 = (r0.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R5_X4:
                    r0 = (r0.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R6_X4:
                    r0 = (r0.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R7_X4:
                    r0 = (r0.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R0_X4:
                    r1 = (r1.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R1_X4:
                    r1 = (r1.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R2_X4:
                    r1 = (r1.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R3_X4:
                    r1 = (r1.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R4_X4:
                    r1 = (r1.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R5_X4:
                    r1 = (r1.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R6_X4:
                    r1 = (r1.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R7_X4:
                    r1 = (r1.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R0_X4:
                    r2 = (r2.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R1_X4:
                    r2 = (r2.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R2_X4:
                    r2 = (r2.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R3_X4:
                    r2 = (r2.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R4_X4:
                    r2 = (r2.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R5_X4:
                    r2 = (r2.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R6_X4:
                    r2 = (r2.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R7_X4:
                    r2 = (r2.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R0_X4:
                    r3 = (r3.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R1_X4:
                    r3 = (r3.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R2_X4:
                    r3 = (r3.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R3_X4:
                    r3 = (r3.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R4_X4:
                    r3 = (r3.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R5_X4:
                    r3 = (r3.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R6_X4:
                    r3 = (r3.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R7_X4:
                    r3 = (r3.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R0_X4:
                    r4 = (r4.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R1_X4:
                    r4 = (r4.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R2_X4:
                    r4 = (r4.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R3_X4:
                    r4 = (r4.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R4_X4:
                    r4 = (r4.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R5_X4:
                    r4 = (r4.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R6_X4:
                    r4 = (r4.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R7_X4:
                    r4 = (r4.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R0_X4:
                    r5 = (r5.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R1_X4:
                    r5 = (r5.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R2_X4:
                    r5 = (r5.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R3_X4:
                    r5 = (r5.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R4_X4:
                    r5 = (r5.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R5_X4:
                    r5 = (r5.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R6_X4:
                    r5 = (r5.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R7_X4:
                    r5 = (r5.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R0_X4:
                    r6 = (r6.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R1_X4:
                    r6 = (r6.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R2_X4:
                    r6 = (r6.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R3_X4:
                    r6 = (r6.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R4_X4:
                    r6 = (r6.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R5_X4:
                    r6 = (r6.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R6_X4:
                    r6 = (r6.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R7_X4:
                    r6 = (r6.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R0_X4:
                    r7 = (r7.AsUInt32() / r0.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R1_X4:
                    r7 = (r7.AsUInt32() / r1.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R2_X4:
                    r7 = (r7.AsUInt32() / r2.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R3_X4:
                    r7 = (r7.AsUInt32() / r3.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R4_X4:
                    r7 = (r7.AsUInt32() / r4.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R5_X4:
                    r7 = (r7.AsUInt32() / r5.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R6_X4:
                    r7 = (r7.AsUInt32() / r6.AsUInt32()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R7_X4:
                    r7 = (r7.AsUInt32() / r7.AsUInt32()).AsByte(); code++; goto Next;

                case OpCode2.AddU_R0_R0_X8:
                    r0 = (r0.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R1_X8:
                    r0 = (r0.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R2_X8:
                    r0 = (r0.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R3_X8:
                    r0 = (r0.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R4_X8:
                    r0 = (r0.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R5_X8:
                    r0 = (r0.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R6_X8:
                    r0 = (r0.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R0_R7_X8:
                    r0 = (r0.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R0_X8:
                    r1 = (r1.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R1_X8:
                    r1 = (r1.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R2_X8:
                    r1 = (r1.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R3_X8:
                    r1 = (r1.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R4_X8:
                    r1 = (r1.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R5_X8:
                    r1 = (r1.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R6_X8:
                    r1 = (r1.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R1_R7_X8:
                    r1 = (r1.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R0_X8:
                    r2 = (r2.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R1_X8:
                    r2 = (r2.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R2_X8:
                    r2 = (r2.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R3_X8:
                    r2 = (r2.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R4_X8:
                    r2 = (r2.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R5_X8:
                    r2 = (r2.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R6_X8:
                    r2 = (r2.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R2_R7_X8:
                    r2 = (r2.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R0_X8:
                    r3 = (r3.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R1_X8:
                    r3 = (r3.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R2_X8:
                    r3 = (r3.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R3_X8:
                    r3 = (r3.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R4_X8:
                    r3 = (r3.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R5_X8:
                    r3 = (r3.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R6_X8:
                    r3 = (r3.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R3_R7_X8:
                    r3 = (r3.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R0_X8:
                    r4 = (r4.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R1_X8:
                    r4 = (r4.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R2_X8:
                    r4 = (r4.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R3_X8:
                    r4 = (r4.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R4_X8:
                    r4 = (r4.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R5_X8:
                    r4 = (r4.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R6_X8:
                    r4 = (r4.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R4_R7_X8:
                    r4 = (r4.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R0_X8:
                    r5 = (r5.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R1_X8:
                    r5 = (r5.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R2_X8:
                    r5 = (r5.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R3_X8:
                    r5 = (r5.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R4_X8:
                    r5 = (r5.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R5_X8:
                    r5 = (r5.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R6_X8:
                    r5 = (r5.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R5_R7_X8:
                    r5 = (r5.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R0_X8:
                    r6 = (r6.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R1_X8:
                    r6 = (r6.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R2_X8:
                    r6 = (r6.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R3_X8:
                    r6 = (r6.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R4_X8:
                    r6 = (r6.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R5_X8:
                    r6 = (r6.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R6_X8:
                    r6 = (r6.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R6_R7_X8:
                    r6 = (r6.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R0_X8:
                    r7 = (r7.AsUInt64() + r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R1_X8:
                    r7 = (r7.AsUInt64() + r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R2_X8:
                    r7 = (r7.AsUInt64() + r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R3_X8:
                    r7 = (r7.AsUInt64() + r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R4_X8:
                    r7 = (r7.AsUInt64() + r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R5_X8:
                    r7 = (r7.AsUInt64() + r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R6_X8:
                    r7 = (r7.AsUInt64() + r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.AddU_R7_R7_X8:
                    r7 = (r7.AsUInt64() + r7.AsUInt64()).AsByte(); code++; goto Next;

                case OpCode2.SubU_R0_R0_X8:
                    r0 = (r0.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R1_X8:
                    r0 = (r0.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R2_X8:
                    r0 = (r0.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R3_X8:
                    r0 = (r0.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R4_X8:
                    r0 = (r0.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R5_X8:
                    r0 = (r0.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R6_X8:
                    r0 = (r0.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R0_R7_X8:
                    r0 = (r0.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R0_X8:
                    r1 = (r1.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R1_X8:
                    r1 = (r1.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R2_X8:
                    r1 = (r1.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R3_X8:
                    r1 = (r1.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R4_X8:
                    r1 = (r1.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R5_X8:
                    r1 = (r1.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R6_X8:
                    r1 = (r1.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R1_R7_X8:
                    r1 = (r1.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R0_X8:
                    r2 = (r2.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R1_X8:
                    r2 = (r2.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R2_X8:
                    r2 = (r2.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R3_X8:
                    r2 = (r2.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R4_X8:
                    r2 = (r2.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R5_X8:
                    r2 = (r2.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R6_X8:
                    r2 = (r2.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R2_R7_X8:
                    r2 = (r2.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R0_X8:
                    r3 = (r3.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R1_X8:
                    r3 = (r3.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R2_X8:
                    r3 = (r3.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R3_X8:
                    r3 = (r3.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R4_X8:
                    r3 = (r3.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R5_X8:
                    r3 = (r3.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R6_X8:
                    r3 = (r3.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R3_R7_X8:
                    r3 = (r3.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R0_X8:
                    r4 = (r4.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R1_X8:
                    r4 = (r4.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R2_X8:
                    r4 = (r4.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R3_X8:
                    r4 = (r4.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R4_X8:
                    r4 = (r4.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R5_X8:
                    r4 = (r4.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R6_X8:
                    r4 = (r4.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R4_R7_X8:
                    r4 = (r4.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R0_X8:
                    r5 = (r5.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R1_X8:
                    r5 = (r5.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R2_X8:
                    r5 = (r5.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R3_X8:
                    r5 = (r5.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R4_X8:
                    r5 = (r5.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R5_X8:
                    r5 = (r5.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R6_X8:
                    r5 = (r5.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R5_R7_X8:
                    r5 = (r5.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R0_X8:
                    r6 = (r6.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R1_X8:
                    r6 = (r6.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R2_X8:
                    r6 = (r6.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R3_X8:
                    r6 = (r6.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R4_X8:
                    r6 = (r6.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R5_X8:
                    r6 = (r6.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R6_X8:
                    r6 = (r6.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R6_R7_X8:
                    r6 = (r6.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R0_X8:
                    r7 = (r7.AsUInt64() - r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R1_X8:
                    r7 = (r7.AsUInt64() - r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R2_X8:
                    r7 = (r7.AsUInt64() - r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R3_X8:
                    r7 = (r7.AsUInt64() - r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R4_X8:
                    r7 = (r7.AsUInt64() - r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R5_X8:
                    r7 = (r7.AsUInt64() - r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R6_X8:
                    r7 = (r7.AsUInt64() - r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.SubU_R7_R7_X8:
                    r7 = (r7.AsUInt64() - r7.AsUInt64()).AsByte(); code++; goto Next;

                case OpCode2.MulU_R0_R0_X8:
                    r0 = (r0.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R1_X8:
                    r0 = (r0.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R2_X8:
                    r0 = (r0.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R3_X8:
                    r0 = (r0.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R4_X8:
                    r0 = (r0.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R5_X8:
                    r0 = (r0.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R6_X8:
                    r0 = (r0.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R0_R7_X8:
                    r0 = (r0.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R0_X8:
                    r1 = (r1.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R1_X8:
                    r1 = (r1.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R2_X8:
                    r1 = (r1.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R3_X8:
                    r1 = (r1.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R4_X8:
                    r1 = (r1.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R5_X8:
                    r1 = (r1.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R6_X8:
                    r1 = (r1.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R1_R7_X8:
                    r1 = (r1.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R0_X8:
                    r2 = (r2.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R1_X8:
                    r2 = (r2.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R2_X8:
                    r2 = (r2.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R3_X8:
                    r2 = (r2.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R4_X8:
                    r2 = (r2.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R5_X8:
                    r2 = (r2.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R6_X8:
                    r2 = (r2.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R2_R7_X8:
                    r2 = (r2.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R0_X8:
                    r3 = (r3.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R1_X8:
                    r3 = (r3.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R2_X8:
                    r3 = (r3.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R3_X8:
                    r3 = (r3.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R4_X8:
                    r3 = (r3.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R5_X8:
                    r3 = (r3.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R6_X8:
                    r3 = (r3.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R3_R7_X8:
                    r3 = (r3.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R0_X8:
                    r4 = (r4.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R1_X8:
                    r4 = (r4.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R2_X8:
                    r4 = (r4.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R3_X8:
                    r4 = (r4.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R4_X8:
                    r4 = (r4.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R5_X8:
                    r4 = (r4.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R6_X8:
                    r4 = (r4.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R4_R7_X8:
                    r4 = (r4.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R0_X8:
                    r5 = (r5.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R1_X8:
                    r5 = (r5.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R2_X8:
                    r5 = (r5.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R3_X8:
                    r5 = (r5.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R4_X8:
                    r5 = (r5.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R5_X8:
                    r5 = (r5.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R6_X8:
                    r5 = (r5.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R5_R7_X8:
                    r5 = (r5.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R0_X8:
                    r6 = (r6.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R1_X8:
                    r6 = (r6.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R2_X8:
                    r6 = (r6.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R3_X8:
                    r6 = (r6.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R4_X8:
                    r6 = (r6.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R5_X8:
                    r6 = (r6.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R6_X8:
                    r6 = (r6.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R6_R7_X8:
                    r6 = (r6.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R0_X8:
                    r7 = (r7.AsUInt64() * r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R1_X8:
                    r7 = (r7.AsUInt64() * r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R2_X8:
                    r7 = (r7.AsUInt64() * r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R3_X8:
                    r7 = (r7.AsUInt64() * r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R4_X8:
                    r7 = (r7.AsUInt64() * r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R5_X8:
                    r7 = (r7.AsUInt64() * r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R6_X8:
                    r7 = (r7.AsUInt64() * r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.MulU_R7_R7_X8:
                    r7 = (r7.AsUInt64() * r7.AsUInt64()).AsByte(); code++; goto Next;

                case OpCode2.DivU_R0_R0_X8:
                    r0 = (r0.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R1_X8:
                    r0 = (r0.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R2_X8:
                    r0 = (r0.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R3_X8:
                    r0 = (r0.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R4_X8:
                    r0 = (r0.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R5_X8:
                    r0 = (r0.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R6_X8:
                    r0 = (r0.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R0_R7_X8:
                    r0 = (r0.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R0_X8:
                    r1 = (r1.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R1_X8:
                    r1 = (r1.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R2_X8:
                    r1 = (r1.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R3_X8:
                    r1 = (r1.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R4_X8:
                    r1 = (r1.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R5_X8:
                    r1 = (r1.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R6_X8:
                    r1 = (r1.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R1_R7_X8:
                    r1 = (r1.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R0_X8:
                    r2 = (r2.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R1_X8:
                    r2 = (r2.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R2_X8:
                    r2 = (r2.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R3_X8:
                    r2 = (r2.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R4_X8:
                    r2 = (r2.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R5_X8:
                    r2 = (r2.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R6_X8:
                    r2 = (r2.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R2_R7_X8:
                    r2 = (r2.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R0_X8:
                    r3 = (r3.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R1_X8:
                    r3 = (r3.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R2_X8:
                    r3 = (r3.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R3_X8:
                    r3 = (r3.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R4_X8:
                    r3 = (r3.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R5_X8:
                    r3 = (r3.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R6_X8:
                    r3 = (r3.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R3_R7_X8:
                    r3 = (r3.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R0_X8:
                    r4 = (r4.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R1_X8:
                    r4 = (r4.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R2_X8:
                    r4 = (r4.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R3_X8:
                    r4 = (r4.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R4_X8:
                    r4 = (r4.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R5_X8:
                    r4 = (r4.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R6_X8:
                    r4 = (r4.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R4_R7_X8:
                    r4 = (r4.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R0_X8:
                    r5 = (r5.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R1_X8:
                    r5 = (r5.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R2_X8:
                    r5 = (r5.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R3_X8:
                    r5 = (r5.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R4_X8:
                    r5 = (r5.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R5_X8:
                    r5 = (r5.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R6_X8:
                    r5 = (r5.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R5_R7_X8:
                    r5 = (r5.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R0_X8:
                    r6 = (r6.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R1_X8:
                    r6 = (r6.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R2_X8:
                    r6 = (r6.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R3_X8:
                    r6 = (r6.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R4_X8:
                    r6 = (r6.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R5_X8:
                    r6 = (r6.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R6_X8:
                    r6 = (r6.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R6_R7_X8:
                    r6 = (r6.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R0_X8:
                    r7 = (r7.AsUInt64() / r0.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R1_X8:
                    r7 = (r7.AsUInt64() / r1.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R2_X8:
                    r7 = (r7.AsUInt64() / r2.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R3_X8:
                    r7 = (r7.AsUInt64() / r3.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R4_X8:
                    r7 = (r7.AsUInt64() / r4.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R5_X8:
                    r7 = (r7.AsUInt64() / r5.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R6_X8:
                    r7 = (r7.AsUInt64() / r6.AsUInt64()).AsByte(); code++; goto Next;
                case OpCode2.DivU_R7_R7_X8:
                    r7 = (r7.AsUInt64() / r7.AsUInt64()).AsByte(); code++; goto Next;

                case OpCode2.AddF_R0_R0_X4:
                    r0 = (r0.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R1_X4:
                    r0 = (r0.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R2_X4:
                    r0 = (r0.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R3_X4:
                    r0 = (r0.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R4_X4:
                    r0 = (r0.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R5_X4:
                    r0 = (r0.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R6_X4:
                    r0 = (r0.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R7_X4:
                    r0 = (r0.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R0_X4:
                    r1 = (r1.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R1_X4:
                    r1 = (r1.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R2_X4:
                    r1 = (r1.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R3_X4:
                    r1 = (r1.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R4_X4:
                    r1 = (r1.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R5_X4:
                    r1 = (r1.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R6_X4:
                    r1 = (r1.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R7_X4:
                    r1 = (r1.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R0_X4:
                    r2 = (r2.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R1_X4:
                    r2 = (r2.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R2_X4:
                    r2 = (r2.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R3_X4:
                    r2 = (r2.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R4_X4:
                    r2 = (r2.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R5_X4:
                    r2 = (r2.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R6_X4:
                    r2 = (r2.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R7_X4:
                    r2 = (r2.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R0_X4:
                    r3 = (r3.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R1_X4:
                    r3 = (r3.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R2_X4:
                    r3 = (r3.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R3_X4:
                    r3 = (r3.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R4_X4:
                    r3 = (r3.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R5_X4:
                    r3 = (r3.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R6_X4:
                    r3 = (r3.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R7_X4:
                    r3 = (r3.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R0_X4:
                    r4 = (r4.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R1_X4:
                    r4 = (r4.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R2_X4:
                    r4 = (r4.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R3_X4:
                    r4 = (r4.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R4_X4:
                    r4 = (r4.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R5_X4:
                    r4 = (r4.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R6_X4:
                    r4 = (r4.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R7_X4:
                    r4 = (r4.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R0_X4:
                    r5 = (r5.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R1_X4:
                    r5 = (r5.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R2_X4:
                    r5 = (r5.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R3_X4:
                    r5 = (r5.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R4_X4:
                    r5 = (r5.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R5_X4:
                    r5 = (r5.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R6_X4:
                    r5 = (r5.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R7_X4:
                    r5 = (r5.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R0_X4:
                    r6 = (r6.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R1_X4:
                    r6 = (r6.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R2_X4:
                    r6 = (r6.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R3_X4:
                    r6 = (r6.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R4_X4:
                    r6 = (r6.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R5_X4:
                    r6 = (r6.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R6_X4:
                    r6 = (r6.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R7_X4:
                    r6 = (r6.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R0_X4:
                    r7 = (r7.AsSingle() + r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R1_X4:
                    r7 = (r7.AsSingle() + r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R2_X4:
                    r7 = (r7.AsSingle() + r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R3_X4:
                    r7 = (r7.AsSingle() + r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R4_X4:
                    r7 = (r7.AsSingle() + r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R5_X4:
                    r7 = (r7.AsSingle() + r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R6_X4:
                    r7 = (r7.AsSingle() + r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R7_X4:
                    r7 = (r7.AsSingle() + r7.AsSingle()).AsByte(); code++; goto Next;

                case OpCode2.SubF_R0_R0_X4:
                    r0 = (r0.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R1_X4:
                    r0 = (r0.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R2_X4:
                    r0 = (r0.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R3_X4:
                    r0 = (r0.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R4_X4:
                    r0 = (r0.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R5_X4:
                    r0 = (r0.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R6_X4:
                    r0 = (r0.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R7_X4:
                    r0 = (r0.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R0_X4:
                    r1 = (r1.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R1_X4:
                    r1 = (r1.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R2_X4:
                    r1 = (r1.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R3_X4:
                    r1 = (r1.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R4_X4:
                    r1 = (r1.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R5_X4:
                    r1 = (r1.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R6_X4:
                    r1 = (r1.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R7_X4:
                    r1 = (r1.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R0_X4:
                    r2 = (r2.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R1_X4:
                    r2 = (r2.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R2_X4:
                    r2 = (r2.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R3_X4:
                    r2 = (r2.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R4_X4:
                    r2 = (r2.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R5_X4:
                    r2 = (r2.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R6_X4:
                    r2 = (r2.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R7_X4:
                    r2 = (r2.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R0_X4:
                    r3 = (r3.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R1_X4:
                    r3 = (r3.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R2_X4:
                    r3 = (r3.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R3_X4:
                    r3 = (r3.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R4_X4:
                    r3 = (r3.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R5_X4:
                    r3 = (r3.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R6_X4:
                    r3 = (r3.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R7_X4:
                    r3 = (r3.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R0_X4:
                    r4 = (r4.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R1_X4:
                    r4 = (r4.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R2_X4:
                    r4 = (r4.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R3_X4:
                    r4 = (r4.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R4_X4:
                    r4 = (r4.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R5_X4:
                    r4 = (r4.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R6_X4:
                    r4 = (r4.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R7_X4:
                    r4 = (r4.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R0_X4:
                    r5 = (r5.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R1_X4:
                    r5 = (r5.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R2_X4:
                    r5 = (r5.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R3_X4:
                    r5 = (r5.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R4_X4:
                    r5 = (r5.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R5_X4:
                    r5 = (r5.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R6_X4:
                    r5 = (r5.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R7_X4:
                    r5 = (r5.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R0_X4:
                    r6 = (r6.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R1_X4:
                    r6 = (r6.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R2_X4:
                    r6 = (r6.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R3_X4:
                    r6 = (r6.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R4_X4:
                    r6 = (r6.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R5_X4:
                    r6 = (r6.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R6_X4:
                    r6 = (r6.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R7_X4:
                    r6 = (r6.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R0_X4:
                    r7 = (r7.AsSingle() - r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R1_X4:
                    r7 = (r7.AsSingle() - r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R2_X4:
                    r7 = (r7.AsSingle() - r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R3_X4:
                    r7 = (r7.AsSingle() - r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R4_X4:
                    r7 = (r7.AsSingle() - r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R5_X4:
                    r7 = (r7.AsSingle() - r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R6_X4:
                    r7 = (r7.AsSingle() - r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R7_X4:
                    r7 = (r7.AsSingle() - r7.AsSingle()).AsByte(); code++; goto Next;

                case OpCode2.MulF_R0_R0_X4:
                    r0 = (r0.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R1_X4:
                    r0 = (r0.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R2_X4:
                    r0 = (r0.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R3_X4:
                    r0 = (r0.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R4_X4:
                    r0 = (r0.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R5_X4:
                    r0 = (r0.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R6_X4:
                    r0 = (r0.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R7_X4:
                    r0 = (r0.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R0_X4:
                    r1 = (r1.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R1_X4:
                    r1 = (r1.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R2_X4:
                    r1 = (r1.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R3_X4:
                    r1 = (r1.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R4_X4:
                    r1 = (r1.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R5_X4:
                    r1 = (r1.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R6_X4:
                    r1 = (r1.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R7_X4:
                    r1 = (r1.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R0_X4:
                    r2 = (r2.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R1_X4:
                    r2 = (r2.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R2_X4:
                    r2 = (r2.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R3_X4:
                    r2 = (r2.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R4_X4:
                    r2 = (r2.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R5_X4:
                    r2 = (r2.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R6_X4:
                    r2 = (r2.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R7_X4:
                    r2 = (r2.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R0_X4:
                    r3 = (r3.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R1_X4:
                    r3 = (r3.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R2_X4:
                    r3 = (r3.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R3_X4:
                    r3 = (r3.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R4_X4:
                    r3 = (r3.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R5_X4:
                    r3 = (r3.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R6_X4:
                    r3 = (r3.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R7_X4:
                    r3 = (r3.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R0_X4:
                    r4 = (r4.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R1_X4:
                    r4 = (r4.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R2_X4:
                    r4 = (r4.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R3_X4:
                    r4 = (r4.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R4_X4:
                    r4 = (r4.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R5_X4:
                    r4 = (r4.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R6_X4:
                    r4 = (r4.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R7_X4:
                    r4 = (r4.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R0_X4:
                    r5 = (r5.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R1_X4:
                    r5 = (r5.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R2_X4:
                    r5 = (r5.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R3_X4:
                    r5 = (r5.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R4_X4:
                    r5 = (r5.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R5_X4:
                    r5 = (r5.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R6_X4:
                    r5 = (r5.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R7_X4:
                    r5 = (r5.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R0_X4:
                    r6 = (r6.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R1_X4:
                    r6 = (r6.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R2_X4:
                    r6 = (r6.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R3_X4:
                    r6 = (r6.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R4_X4:
                    r6 = (r6.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R5_X4:
                    r6 = (r6.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R6_X4:
                    r6 = (r6.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R7_X4:
                    r6 = (r6.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R0_X4:
                    r7 = (r7.AsSingle() * r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R1_X4:
                    r7 = (r7.AsSingle() * r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R2_X4:
                    r7 = (r7.AsSingle() * r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R3_X4:
                    r7 = (r7.AsSingle() * r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R4_X4:
                    r7 = (r7.AsSingle() * r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R5_X4:
                    r7 = (r7.AsSingle() * r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R6_X4:
                    r7 = (r7.AsSingle() * r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R7_X4:
                    r7 = (r7.AsSingle() * r7.AsSingle()).AsByte(); code++; goto Next;

                case OpCode2.DivF_R0_R0_X4:
                    r0 = (r0.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R1_X4:
                    r0 = (r0.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R2_X4:
                    r0 = (r0.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R3_X4:
                    r0 = (r0.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R4_X4:
                    r0 = (r0.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R5_X4:
                    r0 = (r0.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R6_X4:
                    r0 = (r0.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R7_X4:
                    r0 = (r0.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R0_X4:
                    r1 = (r1.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R1_X4:
                    r1 = (r1.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R2_X4:
                    r1 = (r1.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R3_X4:
                    r1 = (r1.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R4_X4:
                    r1 = (r1.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R5_X4:
                    r1 = (r1.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R6_X4:
                    r1 = (r1.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R7_X4:
                    r1 = (r1.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R0_X4:
                    r2 = (r2.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R1_X4:
                    r2 = (r2.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R2_X4:
                    r2 = (r2.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R3_X4:
                    r2 = (r2.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R4_X4:
                    r2 = (r2.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R5_X4:
                    r2 = (r2.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R6_X4:
                    r2 = (r2.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R7_X4:
                    r2 = (r2.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R0_X4:
                    r3 = (r3.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R1_X4:
                    r3 = (r3.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R2_X4:
                    r3 = (r3.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R3_X4:
                    r3 = (r3.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R4_X4:
                    r3 = (r3.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R5_X4:
                    r3 = (r3.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R6_X4:
                    r3 = (r3.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R7_X4:
                    r3 = (r3.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R0_X4:
                    r4 = (r4.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R1_X4:
                    r4 = (r4.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R2_X4:
                    r4 = (r4.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R3_X4:
                    r4 = (r4.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R4_X4:
                    r4 = (r4.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R5_X4:
                    r4 = (r4.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R6_X4:
                    r4 = (r4.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R7_X4:
                    r4 = (r4.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R0_X4:
                    r5 = (r5.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R1_X4:
                    r5 = (r5.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R2_X4:
                    r5 = (r5.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R3_X4:
                    r5 = (r5.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R4_X4:
                    r5 = (r5.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R5_X4:
                    r5 = (r5.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R6_X4:
                    r5 = (r5.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R7_X4:
                    r5 = (r5.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R0_X4:
                    r6 = (r6.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R1_X4:
                    r6 = (r6.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R2_X4:
                    r6 = (r6.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R3_X4:
                    r6 = (r6.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R4_X4:
                    r6 = (r6.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R5_X4:
                    r6 = (r6.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R6_X4:
                    r6 = (r6.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R7_X4:
                    r6 = (r6.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R0_X4:
                    r7 = (r7.AsSingle() / r0.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R1_X4:
                    r7 = (r7.AsSingle() / r1.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R2_X4:
                    r7 = (r7.AsSingle() / r2.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R3_X4:
                    r7 = (r7.AsSingle() / r3.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R4_X4:
                    r7 = (r7.AsSingle() / r4.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R5_X4:
                    r7 = (r7.AsSingle() / r5.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R6_X4:
                    r7 = (r7.AsSingle() / r6.AsSingle()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R7_X4:
                    r7 = (r7.AsSingle() / r7.AsSingle()).AsByte(); code++; goto Next;

                case OpCode2.AddF_R0_R0_X8:
                    r0 = (r0.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R1_X8:
                    r0 = (r0.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R2_X8:
                    r0 = (r0.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R3_X8:
                    r0 = (r0.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R4_X8:
                    r0 = (r0.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R5_X8:
                    r0 = (r0.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R6_X8:
                    r0 = (r0.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R0_R7_X8:
                    r0 = (r0.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R0_X8:
                    r1 = (r1.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R1_X8:
                    r1 = (r1.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R2_X8:
                    r1 = (r1.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R3_X8:
                    r1 = (r1.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R4_X8:
                    r1 = (r1.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R5_X8:
                    r1 = (r1.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R6_X8:
                    r1 = (r1.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R1_R7_X8:
                    r1 = (r1.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R0_X8:
                    r2 = (r2.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R1_X8:
                    r2 = (r2.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R2_X8:
                    r2 = (r2.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R3_X8:
                    r2 = (r2.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R4_X8:
                    r2 = (r2.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R5_X8:
                    r2 = (r2.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R6_X8:
                    r2 = (r2.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R2_R7_X8:
                    r2 = (r2.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R0_X8:
                    r3 = (r3.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R1_X8:
                    r3 = (r3.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R2_X8:
                    r3 = (r3.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R3_X8:
                    r3 = (r3.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R4_X8:
                    r3 = (r3.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R5_X8:
                    r3 = (r3.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R6_X8:
                    r3 = (r3.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R3_R7_X8:
                    r3 = (r3.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R0_X8:
                    r4 = (r4.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R1_X8:
                    r4 = (r4.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R2_X8:
                    r4 = (r4.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R3_X8:
                    r4 = (r4.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R4_X8:
                    r4 = (r4.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R5_X8:
                    r4 = (r4.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R6_X8:
                    r4 = (r4.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R4_R7_X8:
                    r4 = (r4.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R0_X8:
                    r5 = (r5.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R1_X8:
                    r5 = (r5.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R2_X8:
                    r5 = (r5.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R3_X8:
                    r5 = (r5.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R4_X8:
                    r5 = (r5.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R5_X8:
                    r5 = (r5.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R6_X8:
                    r5 = (r5.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R5_R7_X8:
                    r5 = (r5.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R0_X8:
                    r6 = (r6.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R1_X8:
                    r6 = (r6.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R2_X8:
                    r6 = (r6.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R3_X8:
                    r6 = (r6.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R4_X8:
                    r6 = (r6.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R5_X8:
                    r6 = (r6.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R6_X8:
                    r6 = (r6.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R6_R7_X8:
                    r6 = (r6.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R0_X8:
                    r7 = (r7.AsDouble() + r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R1_X8:
                    r7 = (r7.AsDouble() + r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R2_X8:
                    r7 = (r7.AsDouble() + r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R3_X8:
                    r7 = (r7.AsDouble() + r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R4_X8:
                    r7 = (r7.AsDouble() + r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R5_X8:
                    r7 = (r7.AsDouble() + r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R6_X8:
                    r7 = (r7.AsDouble() + r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.AddF_R7_R7_X8:
                    r7 = (r7.AsDouble() + r7.AsDouble()).AsByte(); code++; goto Next;

                case OpCode2.SubF_R0_R0_X8:
                    r0 = (r0.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R1_X8:
                    r0 = (r0.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R2_X8:
                    r0 = (r0.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R3_X8:
                    r0 = (r0.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R4_X8:
                    r0 = (r0.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R5_X8:
                    r0 = (r0.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R6_X8:
                    r0 = (r0.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R0_R7_X8:
                    r0 = (r0.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R0_X8:
                    r1 = (r1.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R1_X8:
                    r1 = (r1.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R2_X8:
                    r1 = (r1.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R3_X8:
                    r1 = (r1.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R4_X8:
                    r1 = (r1.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R5_X8:
                    r1 = (r1.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R6_X8:
                    r1 = (r1.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R1_R7_X8:
                    r1 = (r1.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R0_X8:
                    r2 = (r2.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R1_X8:
                    r2 = (r2.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R2_X8:
                    r2 = (r2.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R3_X8:
                    r2 = (r2.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R4_X8:
                    r2 = (r2.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R5_X8:
                    r2 = (r2.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R6_X8:
                    r2 = (r2.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R2_R7_X8:
                    r2 = (r2.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R0_X8:
                    r3 = (r3.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R1_X8:
                    r3 = (r3.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R2_X8:
                    r3 = (r3.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R3_X8:
                    r3 = (r3.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R4_X8:
                    r3 = (r3.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R5_X8:
                    r3 = (r3.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R6_X8:
                    r3 = (r3.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R3_R7_X8:
                    r3 = (r3.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R0_X8:
                    r4 = (r4.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R1_X8:
                    r4 = (r4.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R2_X8:
                    r4 = (r4.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R3_X8:
                    r4 = (r4.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R4_X8:
                    r4 = (r4.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R5_X8:
                    r4 = (r4.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R6_X8:
                    r4 = (r4.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R4_R7_X8:
                    r4 = (r4.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R0_X8:
                    r5 = (r5.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R1_X8:
                    r5 = (r5.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R2_X8:
                    r5 = (r5.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R3_X8:
                    r5 = (r5.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R4_X8:
                    r5 = (r5.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R5_X8:
                    r5 = (r5.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R6_X8:
                    r5 = (r5.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R5_R7_X8:
                    r5 = (r5.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R0_X8:
                    r6 = (r6.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R1_X8:
                    r6 = (r6.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R2_X8:
                    r6 = (r6.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R3_X8:
                    r6 = (r6.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R4_X8:
                    r6 = (r6.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R5_X8:
                    r6 = (r6.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R6_X8:
                    r6 = (r6.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R6_R7_X8:
                    r6 = (r6.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R0_X8:
                    r7 = (r7.AsDouble() - r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R1_X8:
                    r7 = (r7.AsDouble() - r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R2_X8:
                    r7 = (r7.AsDouble() - r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R3_X8:
                    r7 = (r7.AsDouble() - r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R4_X8:
                    r7 = (r7.AsDouble() - r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R5_X8:
                    r7 = (r7.AsDouble() - r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R6_X8:
                    r7 = (r7.AsDouble() - r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.SubF_R7_R7_X8:
                    r7 = (r7.AsDouble() - r7.AsDouble()).AsByte(); code++; goto Next;

                case OpCode2.MulF_R0_R0_X8:
                    r0 = (r0.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R1_X8:
                    r0 = (r0.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R2_X8:
                    r0 = (r0.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R3_X8:
                    r0 = (r0.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R4_X8:
                    r0 = (r0.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R5_X8:
                    r0 = (r0.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R6_X8:
                    r0 = (r0.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R0_R7_X8:
                    r0 = (r0.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R0_X8:
                    r1 = (r1.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R1_X8:
                    r1 = (r1.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R2_X8:
                    r1 = (r1.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R3_X8:
                    r1 = (r1.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R4_X8:
                    r1 = (r1.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R5_X8:
                    r1 = (r1.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R6_X8:
                    r1 = (r1.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R1_R7_X8:
                    r1 = (r1.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R0_X8:
                    r2 = (r2.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R1_X8:
                    r2 = (r2.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R2_X8:
                    r2 = (r2.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R3_X8:
                    r2 = (r2.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R4_X8:
                    r2 = (r2.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R5_X8:
                    r2 = (r2.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R6_X8:
                    r2 = (r2.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R2_R7_X8:
                    r2 = (r2.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R0_X8:
                    r3 = (r3.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R1_X8:
                    r3 = (r3.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R2_X8:
                    r3 = (r3.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R3_X8:
                    r3 = (r3.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R4_X8:
                    r3 = (r3.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R5_X8:
                    r3 = (r3.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R6_X8:
                    r3 = (r3.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R3_R7_X8:
                    r3 = (r3.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R0_X8:
                    r4 = (r4.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R1_X8:
                    r4 = (r4.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R2_X8:
                    r4 = (r4.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R3_X8:
                    r4 = (r4.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R4_X8:
                    r4 = (r4.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R5_X8:
                    r4 = (r4.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R6_X8:
                    r4 = (r4.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R4_R7_X8:
                    r4 = (r4.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R0_X8:
                    r5 = (r5.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R1_X8:
                    r5 = (r5.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R2_X8:
                    r5 = (r5.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R3_X8:
                    r5 = (r5.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R4_X8:
                    r5 = (r5.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R5_X8:
                    r5 = (r5.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R6_X8:
                    r5 = (r5.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R5_R7_X8:
                    r5 = (r5.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R0_X8:
                    r6 = (r6.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R1_X8:
                    r6 = (r6.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R2_X8:
                    r6 = (r6.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R3_X8:
                    r6 = (r6.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R4_X8:
                    r6 = (r6.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R5_X8:
                    r6 = (r6.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R6_X8:
                    r6 = (r6.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R6_R7_X8:
                    r6 = (r6.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R0_X8:
                    r7 = (r7.AsDouble() * r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R1_X8:
                    r7 = (r7.AsDouble() * r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R2_X8:
                    r7 = (r7.AsDouble() * r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R3_X8:
                    r7 = (r7.AsDouble() * r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R4_X8:
                    r7 = (r7.AsDouble() * r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R5_X8:
                    r7 = (r7.AsDouble() * r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R6_X8:
                    r7 = (r7.AsDouble() * r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.MulF_R7_R7_X8:
                    r7 = (r7.AsDouble() * r7.AsDouble()).AsByte(); code++; goto Next;

                case OpCode2.DivF_R0_R0_X8:
                    r0 = (r0.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R1_X8:
                    r0 = (r0.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R2_X8:
                    r0 = (r0.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R3_X8:
                    r0 = (r0.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R4_X8:
                    r0 = (r0.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R5_X8:
                    r0 = (r0.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R6_X8:
                    r0 = (r0.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R0_R7_X8:
                    r0 = (r0.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R0_X8:
                    r1 = (r1.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R1_X8:
                    r1 = (r1.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R2_X8:
                    r1 = (r1.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R3_X8:
                    r1 = (r1.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R4_X8:
                    r1 = (r1.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R5_X8:
                    r1 = (r1.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R6_X8:
                    r1 = (r1.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R1_R7_X8:
                    r1 = (r1.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R0_X8:
                    r2 = (r2.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R1_X8:
                    r2 = (r2.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R2_X8:
                    r2 = (r2.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R3_X8:
                    r2 = (r2.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R4_X8:
                    r2 = (r2.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R5_X8:
                    r2 = (r2.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R6_X8:
                    r2 = (r2.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R2_R7_X8:
                    r2 = (r2.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R0_X8:
                    r3 = (r3.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R1_X8:
                    r3 = (r3.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R2_X8:
                    r3 = (r3.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R3_X8:
                    r3 = (r3.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R4_X8:
                    r3 = (r3.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R5_X8:
                    r3 = (r3.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R6_X8:
                    r3 = (r3.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R3_R7_X8:
                    r3 = (r3.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R0_X8:
                    r4 = (r4.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R1_X8:
                    r4 = (r4.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R2_X8:
                    r4 = (r4.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R3_X8:
                    r4 = (r4.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R4_X8:
                    r4 = (r4.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R5_X8:
                    r4 = (r4.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R6_X8:
                    r4 = (r4.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R4_R7_X8:
                    r4 = (r4.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R0_X8:
                    r5 = (r5.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R1_X8:
                    r5 = (r5.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R2_X8:
                    r5 = (r5.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R3_X8:
                    r5 = (r5.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R4_X8:
                    r5 = (r5.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R5_X8:
                    r5 = (r5.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R6_X8:
                    r5 = (r5.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R5_R7_X8:
                    r5 = (r5.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R0_X8:
                    r6 = (r6.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R1_X8:
                    r6 = (r6.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R2_X8:
                    r6 = (r6.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R3_X8:
                    r6 = (r6.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R4_X8:
                    r6 = (r6.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R5_X8:
                    r6 = (r6.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R6_X8:
                    r6 = (r6.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R6_R7_X8:
                    r6 = (r6.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R0_X8:
                    r7 = (r7.AsDouble() / r0.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R1_X8:
                    r7 = (r7.AsDouble() / r1.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R2_X8:
                    r7 = (r7.AsDouble() / r2.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R3_X8:
                    r7 = (r7.AsDouble() / r3.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R4_X8:
                    r7 = (r7.AsDouble() / r4.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R5_X8:
                    r7 = (r7.AsDouble() / r5.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R6_X8:
                    r7 = (r7.AsDouble() / r6.AsDouble()).AsByte(); code++; goto Next;
                case OpCode2.DivF_R7_R7_X8:
                    r7 = (r7.AsDouble() / r7.AsDouble()).AsByte(); code++; goto Next;

                case OpCode2.Br: // <op> <u2 op offset>
                    code += *(code + 1); goto Next;

                case OpCode2.BTrue_R0: // <op> <u2 op offset>
                    code += r0 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R1: // <op> <u2 op offset>
                    code += r1 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R2: // <op> <u2 op offset>
                    code += r2 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R3: // <op> <u2 op offset>
                    code += r3 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R4: // <op> <u2 op offset>
                    code += r4 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R5: // <op> <u2 op offset>
                    code += r5 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R6: // <op> <u2 op offset>
                    code += r6 == default ? 2 : *(code + 1); goto Next;
                case OpCode2.BTrue_R7: // <op> <u2 op offset>
                    code += r7 == default ? 2 : *(code + 1); goto Next;

                case OpCode2.BFalse_R0: // <op> <u2 op offset>
                    code += r0 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R1: // <op> <u2 op offset>
                    code += r1 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R2: // <op> <u2 op offset>
                    code += r2 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R3: // <op> <u2 op offset>
                    code += r3 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R4: // <op> <u2 op offset>
                    code += r4 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R5: // <op> <u2 op offset>
                    code += r5 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R6: // <op> <u2 op offset>
                    code += r6 != default ? 2 : *(code + 1); goto Next;
                case OpCode2.BFalse_R7: // <op> <u2 op offset>
                    code += r7 != default ? 2 : *(code + 1); goto Next;

                case OpCode2.BeqI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] == r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BneI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] != r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BltI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] < r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgtI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] > r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BleI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] <= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgeI_R0_R0: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R1: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R2: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R3: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R4: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R5: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R6: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R0_R7: // <op> <u2 op offset>
                    code += r0.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R0: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R1: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R2: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R3: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R4: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R5: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R6: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R1_R7: // <op> <u2 op offset>
                    code += r1.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R0: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R1: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R2: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R3: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R4: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R5: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R6: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R2_R7: // <op> <u2 op offset>
                    code += r2.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R0: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R1: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R2: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R3: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R4: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R5: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R6: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R3_R7: // <op> <u2 op offset>
                    code += r3.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R0: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R1: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R2: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R3: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R4: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R5: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R6: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R4_R7: // <op> <u2 op offset>
                    code += r4.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R0: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R1: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R2: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R3: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R4: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R5: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R6: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R5_R7: // <op> <u2 op offset>
                    code += r5.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R0: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R1: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R2: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R3: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R4: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R5: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R6: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R6_R7: // <op> <u2 op offset>
                    code += r6.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R0: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r0.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R1: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r1.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R2: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r2.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R3: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r3.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R4: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r4.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R5: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r5.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R6: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r6.AsUInt64()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeI_R7_R7: // <op> <u2 op offset>
                    code += r7.AsUInt64()[0] >= r7.AsUInt64()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BeqF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] == r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BneF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] != r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BltF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] < r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgtF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] > r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BleF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] <= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgeF4_R0_R0: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R1: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R2: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R3: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R4: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R5: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R6: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R0_R7: // <op> <u2 op offset>
                    code += r0.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R0: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R1: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R2: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R3: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R4: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R5: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R6: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R1_R7: // <op> <u2 op offset>
                    code += r1.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R0: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R1: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R2: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R3: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R4: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R5: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R6: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R2_R7: // <op> <u2 op offset>
                    code += r2.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R0: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R1: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R2: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R3: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R4: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R5: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R6: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R3_R7: // <op> <u2 op offset>
                    code += r3.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R0: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R1: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R2: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R3: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R4: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R5: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R6: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R4_R7: // <op> <u2 op offset>
                    code += r4.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R0: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R1: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R2: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R3: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R4: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R5: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R6: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R5_R7: // <op> <u2 op offset>
                    code += r5.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R0: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R1: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R2: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R3: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R4: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R5: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R6: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R6_R7: // <op> <u2 op offset>
                    code += r6.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R0: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r0.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R1: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r1.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R2: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r2.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R3: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r3.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R4: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r4.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R5: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r5.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R6: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r6.AsSingle()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF4_R7_R7: // <op> <u2 op offset>
                    code += r7.AsSingle()[0] >= r7.AsSingle()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BeqF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BeqF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] == r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BneF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BneF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] != r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BltF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BltF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] < r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgtF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgtF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] > r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BleF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BleF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] <= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;

                case OpCode2.BgeF8_R0_R0: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R1: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R2: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R3: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R4: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R5: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R6: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R0_R7: // <op> <u2 op offset>
                    code += r0.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R0: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R1: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R2: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R3: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R4: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R5: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R6: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R1_R7: // <op> <u2 op offset>
                    code += r1.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R0: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R1: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R2: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R3: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R4: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R5: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R6: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R2_R7: // <op> <u2 op offset>
                    code += r2.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R0: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R1: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R2: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R3: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R4: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R5: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R6: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R3_R7: // <op> <u2 op offset>
                    code += r3.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R0: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R1: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R2: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R3: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R4: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R5: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R6: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R4_R7: // <op> <u2 op offset>
                    code += r4.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R0: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R1: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R2: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R3: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R4: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R5: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R6: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R5_R7: // <op> <u2 op offset>
                    code += r5.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R0: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R1: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R2: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R3: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R4: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R5: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R6: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R6_R7: // <op> <u2 op offset>
                    code += r6.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R0: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r0.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R1: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r1.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R2: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r2.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R3: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r3.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R4: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r4.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R5: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r5.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R6: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r6.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                case OpCode2.BgeF8_R7_R7: // <op> <u2 op offset>
                    code += r7.AsDouble()[0] >= r7.AsDouble()[0] ? 2 : *(code + 1); goto Next;
                default:
                    throw new ArgumentOutOfRangeException();
            }
        }
    }
}
